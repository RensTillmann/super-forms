var $ = jQuery;
var $doc = $(document);
var SUPER = Object.create(null);

if(typeof super_common_i18n.ajaxurl === 'undefined'){
    super_common_i18n.duration = 500;
    super_common_i18n.ajaxurl = ajaxurl;
}

// reCaptcha Callback
SUPER.reCaptchaverifyCallback = function(response){
    var $ = jQuery;
    $.ajax({
        type: 'post',
        url: super_common_i18n.ajaxurl,
        data: {
            action: 'super_verify_recaptcha',
            response: response,
        },
        success: function (data) {
            if(data==1){
                $('.super-recaptcha').attr('data-verified',1);
                $('.super-recaptcha').removeClass('error-active');
                var $duration = parseFloat(super_common_i18n.duration);
                $('.super-recaptcha').children('p').fadeOut($duration, function() {
                    $(this).remove();
                });
            }else{
                $('.super-recaptcha').attr('data-verified',0);
            }
        }
    }); 
}

// init reCaptcha
SUPER.reCaptcha = function(){
    var $ = jQuery;
    // Load recaptcha api manually if theme uses ajax requests
    if($('.super-shortcode.super-field.super-recaptcha:not(.rendered)').length){
        if( typeof grecaptcha === 'undefined' ) {
            $.getScript( 'https://www.google.com/recaptcha/api.js?onload=SUPER.reCaptcha&render=explicit', function( data, textStatus, jqxhr ) {
            });
        }
    }
    $('.super-shortcode.super-field.super-recaptcha:not(.rendered)').each(function(){
        var $this = $(this);
        var $element = $this.find('.super-recaptcha');
        var $form = $this.parents('.super-form:eq(0)');
        var $form_id = $form.find('input[name="hidden_form_id"]').val();
        $element.attr('data-form',$form_id);
        $element.attr('id','super-recaptcha-'+$form_id);
        if($form.length==0){
            $this.html('<i>reCAPTCHA will only be generated and visible in the Preview or Front-end</i>');  
        }
        if($this.data('key')==''){
            $this.html('<i>reCAPTCHA API key and secret are empty, please navigate to:<br />Super Forms > Settings > Form Settings and fill out your reCAPTCHA API key and secret</i>');  
        }else{
            if(typeof $form_id !== 'undefined'){
                var checkExist = setInterval(function() {
                    if(typeof grecaptcha !== 'undefined'){
                        clearInterval(checkExist);
                        $this.addClass('rendered');
                        var widgetId = grecaptcha.render('super-recaptcha-'+$form_id, {
                            'sitekey' : $element.data('key'),
                            'callback' : SUPER.reCaptchaverifyCallback,
                            'theme' : 'light'
                        });
                    }
                }, 100);
            }
        }
    });
}

// Barcode generator
SUPER.generateBarcode = function(){
    var $ = jQuery;
    $('.super-barcode').each(function(){
        var $this = $(this).find('input');
        var $renderer = 'css';
        var $barcode = $this.val();
        var $barcodetype = $this.data('barcodetype');
        var $background = $this.data('background');
        var $barcolor = $this.data('barcolor');
        var $barwidth = $this.data('barwidth');
        var $barheight = $this.data('barheight');
        var $modulesize = $this.data('modulesize');
        var $rectangular = $this.data('rectangular');
        var $quietzone = false;
        if ($this.data('quietzone')==1) $quietzone = true;
        var $settings = {
            output:$renderer,
            bgColor: $background,
            color: $barcolor,
            barWidth: $barwidth,
            barHeight: $barheight,
            moduleSize: $modulesize,
            addQuietZone: $quietzone
        };
        if($rectangular==1){
            $barcode = {code:$barcode, rect:true};
        }
        $this.parent().find('.super-barcode-target').barcode($barcode, $barcodetype, $settings);
    });
}

// init Rating
SUPER.rating = function(){
    var $ = jQuery;
    $('.super-rating').on('mouseleave',function(){
        $(this).find('.super-rating-star').removeClass('active');
    });
    $('.super-rating-star').on('click',function(){
        $(this).parent().find('.super-rating-star').removeClass('selected');
        $(this).addClass('selected');
        $(this).prevAll('.super-rating-star').addClass('selected');
        var $rating = $(this).index()+1;
        $(this).parent().find('input').val($rating);
    });
    $('.super-rating-star').on('mouseover',function(){
        $(this).parent().find('.super-rating-star').removeClass('active');
        $(this).addClass('active');
        $(this).prevAll('.super-rating-star').addClass('active');
    });
}

// handle Conditional logic
SUPER.conditional_logic = function(){
    var $ = jQuery;
    $('.super-shortcode').each(function(){
        var $wrapper = $(this);
        var $form = $wrapper.parents('.super-form:eq(0)');
        if($wrapper.hasClass('super-file')){
            var $this = $(this).find('.super-selected-files');
        } else if(($wrapper.hasClass('super-column')) || ($wrapper.hasClass('super-html'))) {
            var $this = $wrapper;
            var $action = $this.data('conditional_action');
            var $trigger = $this.data('conditional_trigger');
        } else {
            var $this = $(this).find('.super-shortcode-field');
            var $action = $this.parents('.super-shortcode:eq(0)').data('conditional_action');
            var $trigger = $this.parents('.super-shortcode:eq(0)').data('conditional_trigger');
        }
        if(typeof $action !== 'undefined'){
            if($action!='disabled'){
                var $total = $wrapper.children('.super-conditional-logic').length;
                if( $total>0 ) {
                    $wrapper.css('display','block');
                    if($action=='show') $wrapper.css('display','none');
                    var $counter = 0;
                    
                    $wrapper.children('.super-conditional-logic').each(function(){
                        var $field = $(this).data('field');
                        var $logic = $(this).data('logic');
                        var $value = $(this).data('value');
                        var $and_method = $(this).data('and-method');
                        var $field_and = $(this).data('field-and');
                        var $logic_and = $(this).data('logic-and');
                        var $value_and = $(this).data('value-and');
                        var $shortcode_field = $form.find('.super-shortcode-field[name="'+$field+'"]');
                        var $shortcode_field_value = $shortcode_field.val();
                        if(typeof $shortcode_field_value === 'undefined') $shortcode_field_value = '';
                        var $shortcode_field_and = $form.find('.super-shortcode-field[name="'+$field_and+'"]');
                        var $shortcode_field_and_value = $shortcode_field_and.val();
                        if(typeof $shortcode_field_and_value === 'undefined') $shortcode_field_and_value = '';
                        var $skip = false;
                        $shortcode_field.parents('.super-shortcode.super-column').each(function(){
                            if($(this).css('display')=='none'){
                                $skip = true;
                            }
                        });
                        $shortcode_field_and.parents('.super-shortcode.super-column').each(function(){
                            if($(this).css('display')=='none'){
                                $skip = true;
                            }
                        });
                        var $parent = $shortcode_field.parents('.super-shortcode:eq(0)');
                        if( ( $parent.css('display')=='none' ) && ( !$parent.hasClass('super-hidden') ) ) {
                            $skip = true;
                        }
                        var $parent_and = $shortcode_field_and.parents('.super-shortcode:eq(0)');
                        if( ( $parent_and.css('display')=='none' ) && ( !$parent_and.hasClass('super-hidden') ) ) {
                            $skip = true;
                        }
                        if( $skip==true ) {
                            // Exclude conditionally
                        }else{
                            // Generate correct value before checking conditional logic
                            if( ($logic=='greater_than') ||
                                ($logic=='less_than') ||
                                ($logic=='greater_than_or_equal') ||
                                ($logic=='less_than_or_equal') ) {

                                var $text_field = true;
                                // Check if dropdown field
                                if( ( $parent.hasClass('super-dropdown') ) || ( $parent.hasClass('super-countries') ) ){
                                    $text_field = false;
                                    var $sum = 0;
                                    var $selected = $parent.find('.super-dropdown-ui li.selected:not(.super-placeholder)');
                                    $selected.each(function () {
                                        $sum += $(this).data('value');
                                    });
                                    $value = $sum;
                                }
                                // Check if checkbox field
                                if( $parent.hasClass('super-checkbox') ) {
                                    $text_field = false;
                                    var $sum = 0;
                                    var $checked = $parent.find('input[type="checkbox"]:checked');
                                    $checked.each(function () {
                                        $sum += $(this).val();
                                    });
                                    $value = $sum;
                                }
                            }
                            // Generate correct value before checking conditional logic
                            if( ($logic_and=='greater_than') ||
                                ($logic_and=='less_than') ||
                                ($logic_and=='greater_than_or_equal') ||
                                ($logic_and=='less_than_or_equal') ) {

                                var $text_field = true;
                                // Check if dropdown field
                                if( ( $parent_and.hasClass('super-dropdown') ) || ( $parent_and.hasClass('super-countries') ) ) {
                                    $text_field = false;
                                    var $sum = 0;
                                    var $selected = $parent_and.find('.super-dropdown-ui li.selected:not(.super-placeholder)');
                                    $selected.each(function () {
                                        $sum += $(this).data('value');
                                    });
                                    $value_and = $sum;
                                }
                                // Check if checkbox field
                                if( $parent_and.hasClass('super-checkbox') ) {
                                    $text_field = false;
                                    var $sum = 0;
                                    var $checked = $parent_and.find('input[type="checkbox"]:checked');
                                    $checked.each(function () {
                                        $sum += $(this).val();
                                    });
                                    $value_and = $sum;
                                }
                            }
                            var $match_found = 0;
                            if( ( $logic=='equal' ) && ( $value==$shortcode_field_value ) ) $match_found++;
                            if( $and_method!='' ) {
                                if( ( $logic_and=='equal' ) && ( $value_and==$shortcode_field_and_value ) ) $match_found++;
                            }
                            if( ( $logic=='not_equal' ) && ( $value!=$shortcode_field_value ) ) $match_found++;
                            if( $and_method!='' ) {
                                if( ( $logic_and=='not_equal' ) && ( $value_and!=$shortcode_field_and_value ) ) $match_found++;
                            }
                            if( ( $logic=='greater_than' ) && ( $shortcode_field_value>$value ) ) $match_found++;
                            if( $and_method!='' ) {
                                if( ( $logic_and=='greater_than' ) && ( $shortcode_field_and_value>$value_and ) ) $match_found++;
                            }
                            if( ( $logic=='less_than' ) && ( $shortcode_field_value<$value ) ) $match_found++;
                            if( $and_method!='' ) {
                                if( ( $logic_and=='less_than' ) && ( $shortcode_field_and_value<$value_and ) ) $match_found++;
                            }
                            if( ( $logic=='greater_than_or_equal' ) && ( $shortcode_field_value>=$value ) ) $match_found++;
                            if( $and_method!='' ) {
                                if( ( $logic_and=='greater_than_or_equal' ) && ( $shortcode_field_and_value>=$value_and ) ) $match_found++;
                            }
                            if( ( $logic=='less_than_or_equal' ) && ( $shortcode_field_value<=$value ) ) $match_found++;
                            if( $and_method!='' ) {
                                if( ( $logic_and=='less_than_or_equal' ) && ( $shortcode_field_and_value<=$value_and ) ) $match_found++;
                            }
                            if( $logic=='contains' ) {
                                // When the field is a checkbox
                                $text_field = true;
                                if( $parent.hasClass('super-checkbox') ) {
                                    $text_field = false;
                                    var $checked = $parent.find('input[type="checkbox"]:checked');
                                    $checked.each(function () {
                                        if( $(this).val()==$field_value ) $match_found++;
                                    });
                                }
                                // When the field is a dropdown
                                if( ($parent.hasClass('super-dropdown')) || ($parent.hasClass('super-countries')) ){
                                    $text_field = false;
                                    var $selected = $parent.find('.super-dropdown-ui li.selected:not(.super-placeholder)');
                                    $selected.each(function () {
                                        if( $(this).data('value')==$field_value ) $match_found++;
                                    });
                                }
                                // If other field
                                if( $text_field==true ) {
                                    if( $shortcode_field_value.indexOf($value) >= 0) $match_found++;
                                }
                            }
                            if( $and_method!='' ) {
                                if( $logic_and=='contains' ) {
                                    // When the field is a checkbox
                                    $text_field = true;
                                    if( $parent_and.hasClass('super-checkbox') ) {
                                        $text_field = false;
                                        var $checked = $parent_and.find('input[type="checkbox"]:checked');
                                        $checked.each(function () {
                                            if( $(this).val()==$field_value_and ) $match_found++;
                                        });
                                    }
                                    // When the field is a dropdown
                                    if( ($parent_and.hasClass('super-dropdown')) || ($parent_and.hasClass('super-countries')) ){
                                        $text_field = false;
                                        var $selected = $parent_and.find('.super-dropdown-ui li.selected:not(.super-placeholder)');
                                        $selected.each(function () {
                                            if( $(this).data('value')==$field_value_and ) $match_found++;
                                        });
                                    }
                                    // If other field
                                    if( $text_field==true ) {
                                        if( $shortcode_field_and_value.indexOf($value_and) >= 0) $match_found++;
                                    }
                                }
                            }
                            if( $and_method=='and' ) {
                                if($match_found>=2) $counter++;
                            }else{
                                if($match_found>=1) $counter++;
                            }
                        }
                    });
                    if($trigger=='all'){
                        if($counter==$total){
                            $wrapper.css('display','none');
                            if($action=='show') $wrapper.css('display','block');
                        }
                    }else{
                        if($counter!=0){
                            $wrapper.css('display','none');
                            if($action=='show') $wrapper.css('display','block');
                        }  
                    }
                }
            }
        }
    });
}

// Fade in fields one by one (like a survey)
SUPER.loop_fade = function($next, $duration){
    var $ = jQuery;
    $next.fadeIn($duration);  
    if(($next.hasClass('super-extra-shortcode')) || ($next.hasClass('hidden'))){
        SUPER.loop_fade($next.next('.super-field'), $duration);  
    }else{
        var $this = $next.children('div').children('input,textarea,select');
        var $validation = $this.data('validation');
        var $conditional_validation = $this.data('conditional-validation');
        if( ($validation=='none') && ($conditional_validation=='none') ) {
            var $next = $this.parents('.super-field').next('.super-field');
            SUPER.loop_fade($next, $duration);                
        }
    }
}

// Send the email after a successfull submition
SUPER.complete_submit = function($form,$duration){
    var $ = jQuery;
    if($form.find('input[name="hidden_form_id"]').length == 0) {
        var $form_id = '';
    } else {
        var $form_id = $form.find('input[name="hidden_form_id"]').val();
    }
    var $data = {};
    $data['hidden_form_id'] = { 
        'name':'hidden_form_id',
        'value':$form_id,
        'type':'form_id'
    };
    $form.find('.super-shortcode-field').each(function(){
        var $hidden = false;
        $(this).parents('.super-shortcode.super-column').each(function(){
            if($(this).css('display')=='none'){
                $hidden = true;
            }
        });
        var $parent = $(this).parents('.super-shortcode:eq(0)');
        if( ( $hidden==true )  || ( ( $parent.css('display')=='none' ) && ( !$parent.hasClass('super-hidden') ) ) ) {
            // Exclude conditionally
        }else{
            if($(this).parents('.super-field:eq(0)').hasClass('super-total')){
                $data[$(this).attr('name')] = { 
                    'name':$(this).attr('name'),
                    'value':$(this).val(),
                    'label':$(this).data('email'),
                    'currency':$(this).data('currency'),
                    'exclude':$(this).data('exclude'),
                    'excludeconditional':$(this).data('excludeconditional'),
                    'type':'total'
                };
            }else if($(this).parents('.super-field:eq(0)').hasClass('super-product')){
                $data[$(this).attr('name')] = { 
                    'name':$(this).attr('name'),
                    'value':$(this).val(),
                    'label':$(this).data('email'),
                    'currency':$(this).data('currency'),
                    'price':$(this).data('price'),
                    'exclude':$(this).data('exclude'),
                    'excludeconditional':$(this).data('excludeconditional'),
                    'type':'product'
                };
            }else if($(this).parents('.super-field:eq(0)').hasClass('super-shipping')){
                $data[$(this).attr('name')] = { 
                    'name':$(this).attr('name'),
                    'value':$(this).val(),
                    'label':$(this).data('email'),
                    'currency':$(this).data('currency'),
                    'price':$(this).data('price'),
                    'exclude':$(this).data('exclude'),
                    'excludeconditional':$(this).data('excludeconditional'),
                    'type':'shipping'
                };
            }else if($(this).parents('.super-field:eq(0)').hasClass('super-discount')){
                $data[$(this).attr('name')] = { 
                    'name':$(this).attr('name'),
                    'value':$(this).val(),
                    'label':$(this).data('email'),
                    'currency':$(this).data('currency'),
                    'price':$(this).data('price'),
                    'exclude':$(this).data('exclude'),
                    'excludeconditional':$(this).data('excludeconditional'),
                    'type':'discount'
                };
            }else if($(this).parents('.super-field:eq(0)').hasClass('super-barcode')){
                $data[$(this).attr('name')] = { 
                    'name':$(this).attr('name'),
                    'value':$(this).val(),
                    'label':$(this).data('email'),
                    'barcodetype':$(this).data('barcodetype'),
                    'modulesize':$(this).data('modulesize'),
                    'quietzone':$(this).data('quietzone'),
                    'rectangular':$(this).data('rectangular'),
                    'barheight':$(this).data('barheight'),
                    'barwidth':$(this).data('barwidth'),
                    'exclude':$(this).data('exclude'),
                    'excludeconditional':$(this).data('excludeconditional'),
                    'type':'barcode'
                };
            }else if($(this).hasClass('super-fileupload')){
                var $parent = $(this).parents('.super-field-wrapper:eq(0)');
                var $field = $parent.find('.super-selected-files');                
                var $files = $parent.find('.super-fileupload-files > div');
                $data[$field.attr('name')] = {
                    'label':$field.data('email'),
                    'type':'files',
                    'exclude':$field.data('exclude'),
                    'files':{}};
                $files.each(function(index,file){
                    var file = $(this);
                    $data[$field.attr('name')]['files'][index] = { 
                        'name':$field.attr('name'),
                        'value':file.attr('data-name'),
                        'url':file.attr('data-url'),
                        'thumburl':file.attr('data-thumburl'),
                        'label':$field.data('email'),
                        'exclude':$field.data('exclude'),
                        'excludeconditional':$field.data('excludeconditional'),
                    };
                });
            }else{
                $data[$(this).attr('name')] = { 
                    'name':$(this).attr('name'),
                    'value':$(this).val(),
                    'label':$(this).data('email'),
                    'exclude':$(this).data('exclude'),
                    'excludeconditional':$(this).data('excludeconditional'),
                    'type':'field'
                };
            }
        }
    });
    $.ajax({
        url: super_common_i18n.ajaxurl,
        type: 'post',
        data: {
            action: 'super_send_email',
            data: $data,
            form_id: $form_id,
        },
        success: function (result) {
            var $match = result.match(/<script>/g);
            if($match){
                $form.append(result);
            }else{
                var $result = jQuery.parseJSON(result);
                if($form.find('.super-msg').length){
                    $form.find('.super-msg').remove();
                }
                var $result = jQuery.parseJSON(result);
                if($result.error==true){
                    var $html = '<div class="super-msg error">';
                    if(typeof $result.fields !== 'undefined'){
                        $.each($result.fields, function( index, value ) {
                            $(value+'[name="'+index+'"]').parent().addClass('error');
                        });
                    }                               
                }else{
                    var $html = '<div class="super-msg success">';
                }
                if($result.redirect){
                    window.location.replace($result.redirect);
                }else{
                    $html += $result.msg;
                    $html += '<span class="close"></span>';
                    $html += '</div>';
                    $($html).prependTo($form);
                    $('html, body').animate({
                        scrollTop: $form.offset().top-200
                    }, 1000);
                    $form.find('.super-form-button').removeClass('super-loading');
                    if($result.error==false){
                        $form.find('.super-field, .super-multipart-progress, .super-field, .super-multipart-steps').fadeOut($duration);
                        setTimeout(function () {
                            $form.find('.super-field, .super-shortcode').remove();
                        }, $duration);
                    }                
                }
            }
        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Failed to process data, please try again');
        }
    });
}

// File upload handler
SUPER.upload_files = function($form,$data,$duration){
    var $ = jQuery;
    $form.find('.super-fileupload-files').each(function(){
        var $minfiles = $(this).parent().children('.super-selected-files').data('minfiles');
        if( typeof $minfiles === 'undefined' ) {
            $minfiles = 0;
        }
        if( ( $minfiles==0 ) && ( $(this).parent().children('.super-fileupload-files').children('div').length == 0 ) ) {
            $(this).parent().children('.super-fileupload').addClass('finished');
        }
    });
    $form.find('.super-fileupload-files > div').each(function(){
        var data = $(this).data();
        data.submit();
    });
    $form.find('.super-fileupload').on('fileuploaddone', function (e, data) {
        var $field = $(this).parent('div').children('input[type="hidden"]');
        $.each(data.result.files, function (index, file) {
            if($field.val()==''){
                $field.val(file.name);
            }else{
                $field.val($field.val()+','+file.name);
            }
        });
        var $value = $field.val();
        var $value = $value.split(',');
        $data[$field.attr('name')] = $field.val();
        if($(this).parent('div').find('.super-fileupload-files > div').length == $value.length){
            $(this).addClass('finished');
        }
    });
    var $interval = setInterval(function() {
        if($form.find('.super-fileupload.finished').length == $form.find('.super-fileupload').length){
            clearInterval($interval);
            $form.find('.super-fileupload').fileupload('destroy');
            setTimeout(function() {
                SUPER.complete_submit( $form, $duration );
            }, 1000);
        }
    }, 1000);
}

// Trim strings
SUPER.trim = function($this) {
    if(typeof $this === 'string'){
        return $this.replace(/^s*(S*(s+S+)*)s*$/, "$1");
    }
}

// Check for errors, validate fields
SUPER.handle_validations = function($this, $validation, $duration) {
    
    var $ = jQuery;

    /*
    For validations we can set a lot of options.
    However, we only used the most commonly used ones.
    Below is a complete list for all possible validation to use in futurue
    */
    
    /*--- jQuery RegExp for Numbers ---*/

    //select integers only
    var intRegex = '/[0-9 -()+]+$/';   
    //match any ip address
    var ipRegex = 'bd{1,3}.d{1,3}.d{1,3}.d{1,3}b';  
    //match number in range 0-255
    var num0to255Regex = '^([01][0-9][0-9]|2[0-4][0-9]|25[0-5])$';
    //match number in range 0-999 
    var num0to999Regex = '^([0-9]|[1-9][0-9]|[1-9][0-9][0-9])$';
    //match ints and floats/decimals
    var floatRegex = '[-+]?([0-9]*.[0-9]+|[0-9]+)'; 
    //Match Any number from 1 to 50 inclusive
    var number1to50Regex = '/(^[1-9]{1}$|^[1-4]{1}[0-9]{1}$|^50$)/gm'; 

    
    /*--- jQuery RegExp for Validation ---*/
    
    //match email address
    var emailRegex = '^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$'; 
    //match credit card numbers
    var creditCardRegex = '^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35d{3})d{11})$'; 
    //match username
    var usernameRegex = '/^[a-z0-9_-]{3,16}$/'; 
    //match password
    var passwordRegex = '/^[a-z0-9_-]{6,18}$/'; 
    //Match 8 to 15 character string with at least one upper case letter, one lower case letter, and one digit (useful for passwords).
    var passwordStrengthRegex = '/((?=.*d)(?=.*[a-z])(?=.*[A-Z]).{8,15})/gm'; 
    //match elements that could contain a phone number
    var phoneNumber = '/[0-9-()+]{3,20}/'; 

    
    /*--- jQuery RegExp for Dates ---*/

    //MatchDate (e.g. 21/3/2006)
    var dateRegex = '/(d{1,2}/d{1,2}/d{4})/gm'; 
    //match date in format MM/DD/YYYY
    var dateMMDDYYYRegex = '^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)dd$'; 
    //match date in format DD/MM/YYYY
    var dateDDMMYYYRegex = '^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)dd$';


    /*--- jQuery RegExp for URLâ€™s ---*/

    //match a url
    //var urlRegex = '/^(https?://)?([da-z.-]+).([a-z.]{2,6})([/w .-]*)*/?$/'; 
    //match a url slug (letters/numbers/hypens)
    var urlslugRegex = '/^[a-z0-9-]+$/'; 
    //match a url string (Fixes spaces and querystrings)
    //var urlRegex = '/(https?://)?([da-z.-]+).([a-z.]{2,6})([/w.-=?]*)*/?/';
    var urlRegex = /^(http(s)?:\/\/)?(www\.)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/;


    /*--- jQuery RegExp for Domain Names ---*/

    //match domain name (with HTTP)
    var domainRegex = '/(.*?)[^w{3}.]([a-zA-Z0-9]([a-zA-Z0-9-]{0,65}[a-zA-Z0-9])?.)+[a-zA-Z]{2,6}/igm'; 
    //match domain name (www. only) 
    var domainRegex = '/[^w{3}.]([a-zA-Z0-9]([a-zA-Z0-9-]{0,65}[a-zA-Z0-9])?.)+[a-zA-Z]{2,6}/igm'; 
    //match domain name (alternative)
    var domainRegex = '/(.*?).(com|net|org|info|coop|int|com.au|co.uk|org.uk|ac.uk|)/igm'; 
    //match sub domains: www, dev, int, stage, int.travel, stage.travel
    var subDomainRegex = '/(http://|https://)?(www.|dev.)?(int.|stage.)?(travel.)?(.*)+?/igm';


    /*--- jQuery RegExp for Images ---*/

    //Match jpg, gif or png image   
    var imageRegex = '/([^s]+(?=.(jpg|gif|png)).2)/gm'; 
    //match all images
    var imgTagsRegex = '/<img .+?src="(.*?)".+?/>/ig';  
    //match just .png images
    var imgPngRegex = '/<img .+?src="(.*?.png)".+?/>/ig';


    /*--- Other Useful jQuery RegExp Examples ---*/

    //match RGB (color) string
    var rgbRegex = '/^rgb((d+),s*(d+),s*(d+))$/';  
    //match hex (color) string
    var hexRegex = '/^#?([a-f0-9]{6}|[a-f0-9]{3})$/'; 
    //Match Valid hexadecimal colour code
    var hexRegex = '/(#?([A-Fa-f0-9]){3}(([A-Fa-f0-9]){3})?)/gm'; 
    //match a HTML tag (v1)
    var htmlTagRegex = '/^< ([a-z]+)([^<]+)*(?:>(.*)< /1>|s+/>)$/'; 
    //match HTML Tags (v2)
    var htmlTagRegex = '/(< (/?[^>]+)>)/gm'; 
    //match /product/123456789
    var productUrlRegex = '(/product/)?+[0-9]+';  
    //Match Letters, numbers and hyphens
    var lnhRegex = '/([A-Za-z0-9-]+)/gm';  
    //match all .js includes    
    var jsTagsRegex = '/<script .+?src="(.+?.js(?:?v=d)*).+?script>/ig';  
    //match all .css includes
    var cssTagsRegex = '/<link .+?href="(.+?.css(?:?v=d)*).+?/>/ig'; 

    var $error = false;

    var $may_be_empty = $this.data('may-be-empty');
    if( ($may_be_empty==true) && ($this.val().length==0) ) {
        return false;
    }
    $('.super-field.conditional[data-conditionalfield="'+$this.attr('name')+'"]').each(function(){
        if($(this).data('conditionalvalue')==$this.val()){
            $(this).addClass('active');
            $(this).find('select').data('excludeconditional','0');
        }else{
            $(this).removeClass('active');
            $(this).find('select').data('excludeconditional','1');
        }
    });
    if ($validation == 'captcha') {
        $error = true;
    }
    if ($validation == 'numeric') {
        var $regex = /^\d+$/;
        var $float = /^((\d+(\.\d *)?)|((\d*\.)?\d+))$/;
        var $value = $this.val();
        if (!$regex.test($value) || !$float.test($value)) {
            $error = true;
        }
    }
    if ($validation == 'empty') {
        if(SUPER.trim($this.val()) == '') {
            $error = true;
        }
    }
    if ($validation == 'email') {
        if (($this.val().length < 4) || (!/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test($this.val()))) {
            $error = true;
        }
    }
    if ($validation == 'phone') {
        var $regex = /^((\+)?[1-9]{1,2})?([-\s\.])?((\(\d{1,4}\))|\d{1,4})(([-\s\.])?[0-9]{1,12}){1,2}$/;
        var $value = $this.val();
        var $numbers = $value.split("").length;
        if (10 <= $numbers && $numbers <= 20 && $regex.test($value)) {
        }else{
            $error = true;
        }
    }
    if ($validation == 'website') {
        var $value = $this.val();
        var pattern = new RegExp(urlRegex);
        if(pattern.test($value)) {
        }else{
            $error = true;
        }
    }    
    var $attr = $this.attr('data-minlength');
    if (typeof $attr !== 'undefined' && $attr !== false) {
        var $text_field = true;
        var $total = 0;
        var $parent = $this.parents('.super-field:eq(0)');
        if($parent.hasClass('super-product')){
            $text_field = false;
            if(parseFloat($this.val()) < parseFloat($attr)){
                $error = true;
            }
        }
        if($parent.hasClass('super-checkbox')){
            $text_field = false;
            var $checked = $parent.find('input[type="checkbox"]:checked');
            $checked.each(function () {
                $total++;
            });
            if($total < $attr){
                $error = true;
            }
        }
        if( ($parent.hasClass('super-dropdown')) || ($parent.hasClass('super-countries')) ){
            $text_field = false;
            var $total = $parent.find('.super-dropdown-ui li.selected:not(.super-placeholder)').length;
            if($total < $attr){
                $error = true;
            }
        }
        if($text_field==true){
            if($this.val().length < $attr){
                $error = true;
            }
        }       
    }
    var $attr = $this.attr('data-maxlength');
    if (typeof $attr !== 'undefined' && $attr !== false) {
        var $text_field = true;
        var $total = 0;
        var $parent = $this.parents('.super-field:eq(0)');
        if($parent.hasClass('super-product')){
            $text_field = false;
            if(parseFloat($this.val()) > parseFloat($attr)){
                $error = true;
            }
        }
        if($parent.hasClass('super-checkbox')){
            $text_field = false;
            var $checked = $parent.find('input[type="checkbox"]:checked');
            $checked.each(function () {
                $total++;
            });
            if($total > $attr){
                $error = true;
            }
        }
        if( ($parent.hasClass('super-dropdown')) || ($parent.hasClass('super-countries')) ){
            $text_field = false;
            var $total = $parent.find('.super-dropdown-ui li.selected:not(.super-placeholder)').length;
            if($total > $attr){
                $error = true;
            }
        }
        if($text_field==true){
            if($this.val().length > $attr){
                $error = true;
            }
        }
    }
    var $attr = $this.attr('data-minnumber');
    if (typeof $attr !== 'undefined' && $attr !== false) {
        var $parent = $this.parents('.super-field:eq(0)');
        if( parseFloat($this.val()) < parseFloat($attr) ) {
            $error = true;
        }
    }
    var $attr = $this.attr('data-maxnumber');
    if (typeof $attr !== 'undefined' && $attr !== false) {
        var $parent = $this.parents('.super-field:eq(0)');
        if( parseFloat($this.val()) > parseFloat($attr) ) {
            $error = true;
        }
    }    

    // @since   1.0.6
    var $logic = $this.data('conditional-validation');
    if( ($logic!='none') && ($logic!='') ){
        var $field_value = $this.val();
        var $value = $this.data('conditional-validation-value');
        if(typeof $value !== 'undefined'){
            var $string_value = $value.toString();
            var $string_field_value = $field_value.toString();
            var $bracket = "{";
            if($string_value.indexOf($bracket) != -1){
                var $form = $this.parents('.super-form:eq(0)');
                var $regular_expression = /\{(.*?)\}/g;
                var $name = $regular_expression.exec($value);
                var $name = $name[1];
                var $element = $form.find('.super-shortcode-field[name="'+$name+'"]');
                if($element.length){
                    var $text_field = true;
                    var $parent = $element.parents('.super-field:eq(0)');
                    // Check if dropdown field
                    if( ($parent.hasClass('super-dropdown')) || ($parent.hasClass('super-countries')) ){
                        $text_field = false;
                        var $sum = 0;
                        var $selected = $parent.find('.super-dropdown-ui li.selected:not(.super-placeholder)');
                        $selected.each(function () {
                            $sum += $(this).data('value');
                        });
                        $value = $sum;
                    }
                    // Check if checkbox field
                    if($parent.hasClass('super-checkbox')){
                        $text_field = false;
                        var $sum = 0;
                        var $checked = $parent.find('input[type="checkbox"]:checked');
                        $checked.each(function () {
                            $sum += $(this).val();
                        });
                        $value = $sum;
                    }
                    // Check if text or textarea field
                    if($text_field==true){
                        $value = ($element.val()) ? $element.val() : '';
                    }
                }
            }
        }

        var $counter = 0;
        if($logic=='equal'){
            if($field_value==$value){
                $counter++;
            }                            
        }
        if($logic=='not_equal'){
            if($field_value!=$value){
                $counter++;
            }                            
        }
        if($logic=='greater_than'){
            if($field_value>$value){
                $counter++;
            }                            
        }
        if($logic=='less_than'){
            if($field_value<$value){
                $counter++;
            }                            
        }
        if($logic=='greater_than_or_equal'){
            if($field_value>=$value){
                $counter++;
            }                            
        }
        if($logic=='less_than_or_equal'){
            if($field_value<$value){
                $counter++;
            }                            
        }
        if($logic=='contains'){
            if($string_field_value.indexOf($string_value) >= 0){
                $counter++;
            }
        }
        if($counter==0){
            $error = true;
        }
    }

    if($error==true){
        SUPER.handle_errors($this, $duration);
        var $index = $this.parents('.super-multipart:eq(0)').index('.super-form:eq(0) .super-multipart');
        $this.parents('.super-form:eq(0)').find('.super-multipart-steps').children('.super-multipart-step:eq('+$index+')').addClass('super-error');
    }else{
        $this.parents('.super-field:eq(0)').removeClass('error-active');
        $this.parents('.super-field:eq(0)').children('p').fadeOut($duration, function() {
            $(this).remove();
        });
    }
    
    if($this.parents('.super-multipart:eq(0)').find('.super-field > p').length==0){
        var $index = $this.parents('.super-multipart:eq(0)').index('.super-form:eq(0) .super-multipart');
        $this.parents('.super-form:eq(0)').find('.super-multipart-steps').children('.super-multipart-step:eq('+$index+')').removeClass('super-error');
    }
    return $error;
}

// Custom error theme
SUPER.custom_theme_error = function($form, $this){
    var $ = jQuery;
    if($form.find('input[name="hidden_theme"]').length != 0){
        var $theme_options = $form.find('input[name="hidden_theme"]').data();
        $this.attr('style', 'background-color:'+$theme_options['error_bg']+';border-color:'+$theme_options['error_border']+';color:'+$theme_options['error_font']);
    }        
}

// Get the error duration (for fades)
SUPER.get_duration = function($form){
    var $ = jQuery;
    if($form.find('input[name="hidden_duration"]').length == 0){
        var $duration = parseFloat(super_common_i18n.duration);
    }else{
        var $duration = parseFloat($form.find('input[name="hidden_duration"]').val());
    }
    return $duration;
}

// Output errors for each field
SUPER.handle_errors = function($this, $duration){
    var $ = jQuery;
    var $error_position = $this.parents('.super-field:eq(0)');
    var $position = 'after';
    if(($error_position.hasClass('top-left')) || ($error_position.hasClass('top-right'))){
        var $position = 'before';
    }
    if ($this.data('message')){
        var $message = $this.data('message');
    }else{
        var $message = super_common_i18n.errors.fields.required;
    }
    if ($this.parents('.super-field:eq(0)').children('p').length == 0) {
        var $element = $this.parents('.super-field-wrapper:eq(0)');
        if($this.hasClass('super-recaptcha')){
            var $element = $this;
        }
        if($position=='before'){
            $('<p style="display:none;">' + $message + '</p>').insertBefore($element);
        }
        if($position=='after'){
            $('<p style="display:none;">' + $message + '</p>').insertAfter($element);
        }
    }
    if(($this.parents('.super-field').next('.grouped').length != 0) || ($this.parents('.super-field').hasClass('grouped'))){
        $this.parent().children('p').css('max-width', $this.parent().outerWidth()+'px');
    }
    SUPER.custom_theme_error($this.parents('.super-form'), $this.parent().children('p'));
    $this.parents('.super-field:eq(0)').addClass('error-active');
    $this.parents('.super-field:eq(0)').children('p').fadeIn($duration);
}

// Validate the form
SUPER.validate_form = function($this){
    SUPER.before_validating_form_hook();
    var $ = jQuery;
    var $form = $this,
        $data = [],
        $error = false;
    var $duration = SUPER.get_duration($form);

    $form.find('.super-field').find('.super-shortcode-field, .super-recaptcha, .super-selected-files').each(function () {
        var $hidden = false;
        var $this = $(this);
        $this.parents('.super-shortcode.super-column').each(function(){
            if($(this).css('display')=='none'){
                $hidden = true;
            }
        });
        var $parent = $this.parents('.super-shortcode:eq(0)');
        if( ( $hidden==true )  || ( ( $parent.css('display')=='none' ) && ( !$parent.hasClass('super-hidden') ) ) ) {
            // Exclude conditionally
        }else{
            var $text_field = true;
            if($this.hasClass('super-recaptcha')){
                $text_field = false;
                if($this.data('verified')!=1){
                    if (SUPER.handle_validations($this, 'captcha', $duration)) {
                        $error = true;
                    }
                }
            }
            if($this.hasClass('super-selected-files')){
                $text_field = false;
                var $attr = $this.data('minfiles');
                if (typeof $attr !== 'undefined' && $attr !== false) {
                    var $total = $this.parent().children('.super-fileupload-files').children('div').length;
                    if($total < $attr) {
                        SUPER.handle_errors($this, $duration);
                        $error = true;
                    }
                }
                var $attr = $this.data('maxfiles');
                if (typeof $attr !== 'undefined' && $attr !== false) {
                    var $total = $this.parent().children('.super-fileupload-files').children('div').length;
                    if($total > $attr) {
                        SUPER.handle_errors($this, $duration);
                        $error = true;
                    }
                }
                if($error == false){
                    $this.parents('.super-field:eq(0)').removeClass('error-active');
                    $this.parents('.super-field:eq(0)').children('p').fadeOut($duration, function() {
                        $(this).remove();   
                    });
                }
            }
            if($text_field==true){
                var $validation = $this.data('validation');
                if (typeof $validation !== 'undefined' && $validation !== false) {
                    if (SUPER.handle_validations($this, $validation, $duration)) {
                        $error = true;
                    }
                }
            }
        }
    });
    if ($error == false) {   
        $form.find('.super-form-button').addClass('super-loading');
        $form.find('.super-form-button .super-button-name').html('<i class="fa fa-refresh fa-spin"></i>'+super_common_i18n.loading);
        if ($form.find('.super-fileupload-files > div').length != 0) {
            SUPER.upload_files($form,$data,$duration);
        }else{
            SUPER.complete_submit($form,$duration);
        }
    }else{
        if($form.find('.super-multipart-step.super-error').length){
            var $this = $form.find('.super-multipart-step.super-error:eq(0)');
            var $index = $this.index();
            var $total = $form.find('.super-multipart').length;
            var $progress = 100 / $total;
            var $progress = $progress * ($index+1);
            var $multipart = $form.find('.super-multipart:eq('+$index+')');
            $form.find('.super-multipart-progress-bar').css('width',$progress+'%');
            $form.find('.super-multipart-step').removeClass('active');
            $form.find('.super-multipart').removeClass('active');
            $multipart.addClass('active');
            $this.addClass('active');
            $('html, body').animate({
                scrollTop: $form.offset().top - 30 
            }, 1000); 
        }else{
            $('html, body').animate({
                scrollTop: $form.find('.super-field > p').offset().top-200
            }, 1000); 
        }
    }
    SUPER.after_validating_form_hook();
}

// Define Javascript Hooks
SUPER.before_validating_form_hook = function(){
    var $functions = super_common_i18n.dynamic_functions.before_validating_form_hook;
    jQuery.each($functions, function(key, value){
        if(typeof SUPER[value.name] !== 'undefined') SUPER[value.name]();
    });
}
SUPER.after_validating_form_hook = function(){
    var $functions = super_common_i18n.dynamic_functions.after_validating_form_hook;
    jQuery.each($functions, function(key, value){
        if(typeof SUPER[value.name] !== 'undefined') SUPER[value.name]();
    });
}
SUPER.after_initializing_forms_hook = function(){
    var $functions = super_common_i18n.dynamic_functions.after_initializing_forms_hook;
    jQuery.each($functions, function(key, value){
        if(typeof SUPER[value.name] !== 'undefined') SUPER[value.name]();
    });
}
SUPER.after_dropdown_change_hook = function(){
    var $functions = super_common_i18n.dynamic_functions.after_dropdown_change_hook;
    jQuery.each($functions, function(key, value){
        if(typeof SUPER[value.name] !== 'undefined') SUPER[value.name]();
    });
}
SUPER.after_field_change_blur_hook = function(){
    var $functions = super_common_i18n.dynamic_functions.after_field_change_blur_hook;
    jQuery.each($functions, function(key, value){
        if(typeof SUPER[value.name] !== 'undefined') SUPER[value.name]();
    });
}
SUPER.after_radio_change_hook = function(){
    var $functions = super_common_i18n.dynamic_functions.after_radio_change_hook;
    jQuery.each($functions, function(key, value){
        if(typeof SUPER[value.name] !== 'undefined') SUPER[value.name]();
    });
}
SUPER.after_checkbox_change_hook = function(){
    var $functions = super_common_i18n.dynamic_functions.after_checkbox_change_hook;
    jQuery.each($functions, function(key, value){
        if(typeof SUPER[value.name] !== 'undefined') SUPER[value.name]();
    });
}

// Checkbox handler
SUPER.checkboxes = function(){
    var $ = jQuery;
    $('.super-checkbox').each(function(){
        var $value = '';
        var $counter = 0;
        var $checked = $(this).find('input[type="checkbox"]:checked');
        $checked.each(function () {
            if ($counter == 0) $value = $(this).val();
            if ($counter != 0) $value = $value + ', ' + $(this).val();
            $counter++;
        });
        $(this).find('input[type="hidden"]').val($value);
    });
    $('.super-radio, .super-shipping').each(function(){
        var $name = $(this).find('.super-shortcode-field').attr('name');
        $(this).find('input[type="radio"]').attr('name','group_'+$name);
    });
    $('.super-shipping').each(function(){
        if(!$(this).hasClass('html-finished')){
            var $currency = $(this).find('.super-shortcode-field').attr('data-currency');
            $(this).find('input[type="radio"]').each(function(){
                var $html = $(this).parent().html();
                var $value = $(this).val();
                $(this).parent().html($html+'<span class="super-shipping-price"> &#8212; '+$currency+''+parseFloat($value).toFixed(2)+'</span>');
            });
            $(this).addClass('html-finished');
        }        
    });
}

// Handle columns
SUPER.handle_columns = function(){
    var $ = jQuery;
    var $preload = super_common_i18n.preload;
    $('div.super-field').each(function(){
        /* 
        @removed @since      1.0.6  no longer needed
        var $item = $(this).nextAll(':not(.super-shortcode):not(.super-conditional-logic)');
        if($item.prop("tagName")!='STYLE'){
            $item.remove();
        }
        */
        if($(this).hasClass('grouped')){
            if((!$(this).prev().hasClass('grouped')) || ($(this).prev().hasClass('grouped-end'))){
                $(this).addClass('grouped-start'); 
            }
        }
    });
    var $width = 0;
    $('.super-field > .super-label').each(function () {
        if($(this).parent().index()); 
        if (!$(this).parent().hasClass('grouped')) {
            if ($(this).outerWidth(true) > $width) $width = $(this).outerWidth(true);
        }
    });
    $('.super-form').each(function () {
        var $this = $(this);
        $preload = 0;
        if (!$this.hasClass('active')) {
            if (!$this.hasClass('initialized')) {
                $this.addClass('initialized');
                setTimeout(function (){
                    $this.fadeOut(100, function () {
                        $this.addClass('active').fadeIn(500);
                    });
                }, 1000);
            }
        } else {
            $this.addClass('active');
        }
        SUPER.after_initializing_forms_hook();
    });
    
    //Checkbox fields
    SUPER.checkboxes();
    
    //Barcodes
    SUPER.generateBarcode();
    
    //Rating
    SUPER.rating();
        
}

// Remove responsive class from the form
SUPER.remove_super_form_classes = function($this, $classes){
    var $ = jQuery;
    $.each($classes, function( k, v ) {
        $this.removeClass(v);
    });
}

// init the form on the frontend
SUPER.init_super_form_frontend = function(){

    var $ = jQuery;
    if($('.super-fileupload').length){
        $('.super-fileupload:not(.rendered)').addClass('rendered').fileupload({
            add: function(e, data) {
                var uploadErrors = [];
                if(data.originalFiles[0]['size'] > ($(this).data('file-size')*1000000) ) {
                    $(this).parent('div').children('.super-fileupload-files').children('div[data-name="'+data.originalFiles[0]['name']+'"]').remove();
                    uploadErrors.push('Filesize is too big');
                }
                if(uploadErrors.length > 0) {
                    alert(uploadErrors.join("\n"));
                }
            },
            dataType: 'json',
            autoUpload: false,
            //acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i, //Allow these file extensions with SUPER
            //maxFileSize: $(this).data('file-size')*1000000, // 5 MB
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $(this).parent().children('.super-progress-bar').css('display','block').css('width', progress + '%');
            }        
        }).on('fileuploaddone', function (e, data) {
            $.each(data.result.files, function (index, file) {
                data.context.attr('data-name',file.name).attr('data-url',file.url).attr('data-thumburl',file.thumbnailUrl);
            });
        }).on('fileuploadadd', function (e, data) {
            data.context = $('<div/>').appendTo($(this).parent('div').children('.super-fileupload-files'));
            var accepted_file_types = $(this).data('accept-file-types');
            var file_types_object = accepted_file_types.split('|');
            $.each(data.files, function (index, file) {
                var ext = file.name.split('.').pop();
                if( (file_types_object.indexOf(ext)!=-1) || (accepted_file_types=='') ) {
                    data.context.data(data).attr('data-name',file.name).html('<span class="super-fileupload-name">'+file.name+'</span><span class="super-fileupload-delete">[x]</span>');
                }else{
                    alert(super_common_i18n.errors.file_upload.incorrect_file_extension);
                }
            });
        }).on('fileuploadprocessalways', function (e, data) {
            var index = data.index;
            var file = data.files[index];
            if (file.error) {
                $(this).parent('div').children('.super-fileupload-files').find("[data-name='" + file.name + "']").remove();
                alert(file.error);
            }
        }).on('fileuploadfail', function (e, data) {
            $.each(data.files, function (index, file) {
                var error = $('<span class="text-danger"/>').text('File upload failed.');
                $(data.context.children()[index]).append('<br>').append(error);
            });
        });
    }

    //Set dropdown placeholder
    $('.super-dropdown-ui').each(function(){
        var $this = $(this);
        var $first_item = $this.children('li:eq(1)');

        // @since   1.1.8    - check if we can find a default value
        var $value = $this.parent('.super-field-wrapper').find('.super-shortcode-field').val();
        if($value!=''){
            var $new_placeholder = '';
            var $value = $value.split(',');
            var $i = 0;
            $.each($value, function( index, value ) {
                value = $.trim(value);
                // Lets find the option name based on the matched value
                if($this.children('li[data-value="'+value+'"]').length){
                    var $name = $this.children('li[data-value="'+value+'"]').html();
                    if($i==0){
                        $new_placeholder += $name;
                    }else{
                        $new_placeholder += ', '+$name;
                    }
                    $this.children('li[data-value="'+value+'"]').addClass('selected');
                    $i++;
                }
            });
            $this.children('.super-placeholder').html($new_placeholder);
        }else{
            if($this.children('.super-placeholder').html()==''){
                $first_item.addClass('selected');
                $this.children('.super-placeholder').attr('data-value', $first_item.attr('data-value')).html($first_item.html());
            }
        }
    });

    // @since 1.1.8     - set radio button to correct value
    $('.super-field.super-radio').each(function(){
        var $this = $(this);
        var $value = $this.find('.super-shortcode-field').val();
        var $value = $value.split(',');
        $this.find('input[type="radio"]').prop("checked", false);
        $.each($value, function( index, value ) {
            value = $.trim(value);
            $this.find('input[type="radio"][value="'+value+'"]').prop("checked", true);
        });
    });

    // @since 1.1.8     - set checkbox to correct value
    $('.super-field.super-checkbox').each(function(){
        var $this = $(this);
        var $value = $this.find('.super-shortcode-field').val();
        var $value = $value.split(',');
        $this.find('input[type="checkbox"]').prop("checked", false);
        $.each($value, function( index, value ) {
            value = $.trim(value);
            $this.find('input[type="checkbox"][value="'+value+'"]').prop("checked", true);
        });
    });    

    // @since 1.1.8     - set star rating to correct value
    $('.super-rating').each(function(){
        var $value = $(this).find('.super-shortcode-field').val();
        var $rating = $(this).find('.super-rating-star:eq('+($value-1)+')');
        if($rating.length){
            $(this).find('.super-rating-star').removeClass('selected');
            $rating.addClass('selected');
            $rating.prevAll('.super-rating-star').addClass('selected');
        }
    });

    // Multi-part
    $('.super-form').each(function(){
        var $form = $(this);
        var $total = $form.find('.super-multipart').length;
        if( $total!=0 ) {
            var $multipart = {};
            var $multiparts =  [];

            // Lets check if this form has already rendered the multi-parts
            if( !$form.find('.super-multipart:eq(0)').hasClass('rendered') ) {

                // First Multi-part should be set to active automatically
                $form.find('.super-multipart:eq(0)').addClass('active').addClass('rendered');
                
                // Now lets loop through all the multi-parts and set the data such as name and description
                $form.find('.super-multipart').each(function(){
                    $multipart = {
                        name: $(this).data('step-name'),
                        description: $(this).data('step-description'),
                        icon: $(this).data('icon'),
                    }
                    $multiparts.push($multipart);
                });

                // Because users can append multiple buttons on their own we only do the next step if only 1 button could be found
                // Lets find out if we could only find 1 submit button in this form
                var $submit_button = $form.children('.super-form-button').length;
                if( $submit_button==1 ) {
                    var $button_html = $form.children('.super-form-button').find('.super-button-name').html();
                    var $button_name = $form.children('.super-form-button').find('.super-button-name').text();
                    var $button_clone = $form.children('.super-form-button')[0].outerHTML;
                    $($button_clone).appendTo($form.find('.super-multipart').not(':first'));
                    $($button_clone).appendTo($form.find('.super-multipart'));
                    $form.children('.super-form-button').remove();
                    $form.find('.super-multipart:not(:last-child)').find('.super-button-name').html(super_common_i18n.directions.next);
                    $form.find('.super-multipart').not(':first').find('.super-button-name:eq(1)').html(super_common_i18n.directions.prev);
                    $form.find('.super-multipart').not(':first').not(':last').find('.super-form-button:eq(0)').removeClass('super-form-button').addClass('super-next-multipart');
                    $form.find('.super-multipart').not(':first').not(':last').find('.super-form-button').removeClass('super-form-button').addClass('super-prev-multipart');
                    $form.find('.super-multipart:first').find('.super-form-button').removeClass('super-form-button').addClass('super-next-multipart');
                    $form.find('.super-multipart:last').find('.super-form-button:eq(1)').removeClass('super-form-button').addClass('super-prev-multipart');
                    $form.find('.super-multipart').each(function(){
                        var $buttons_html = '';
                        $(this).find('.super-button-align-center').each(function(){
                            $buttons_html += $(this)[0].outerHTML;
                        });
                        $(this).find('.super-button-align-center').remove();
                        $( '<div class="super-buttons-wrapper">'+$buttons_html+'</div>' ).appendTo($(this));
                    });
                    $form.find('.super-multipart:not(:first)').each(function(){
                        $(this).find('.super-button-align-center:first').insertAfter($(this).find('.super-button-align-center:last'));
                    });
                }

                // Lets setup the progress steps
                var $progress_steps  = '<ul class="super-multipart-steps">';
                $.each($multiparts, function( index, value ) {
                    if($total==1){
                        $progress_steps += '<li class="super-multipart-step active last-step">';
                    }else{
                        if((index==0) && ($total != (index+1))){
                            $progress_steps += '<li class="super-multipart-step active">';
                        }else{
                            if($total == (index+1)){
                                $progress_steps += '<li class="super-multipart-step last-step">';
                            }else{
                                $progress_steps += '<li class="super-multipart-step">';
                            }
                        }
                    }
                    $progress_steps += '<span class="super-multipart-step-wrapper">';
                    $progress_steps += '<span class="super-multipart-step-icon"><i class="fa fa-'+value.icon+'"></i></span>';
                    $progress_steps += '<span class="super-multipart-step-count">'+(index+1)+'</span>';
                    $progress_steps += '<span class="super-multipart-step-name">'+value.name+'</span>';
                    $progress_steps += '<span class="super-multipart-step-description">'+value.description+'</span>';
                    $progress_steps += '</span>';
                    $progress_steps += '</li>';
                });
                $progress_steps += '</ul>';
                $form.prepend($progress_steps);

                // Here we set the correct progress bar in percentages
                var $progress = 100 / $total;
                var $progress_bar  = '<div class="super-multipart-progress">';
                    $progress_bar += '<div class="super-multipart-progress-inner">';
                    $progress_bar += '<div class="super-multipart-progress-bar" style="width:'+$progress+'%"></div>';
                    $progress_bar += '</div>';
                    $progress_bar += '</div>';
                $form.prepend($progress_bar);
            }
        }
        /*
        var $form = $(this);
        var $total = $form.find('.super-multipart').length;
        if($total!=0){
            var $multipart = {}; // my object
            var $multiparts =  []; // my array
            $form.find('.super-multipart:eq(0)').addClass('active');
            $form.find('.super-multipart').each(function(){
                $multipart = {
                    name: $(this).data('step-name'),
                    description: $(this).data('step-description'),
                    icon: $(this).data('icon'),
                }
                $multiparts.push($multipart);
            });
            var $button_html = $form.children('.super-form-button').find('.super-button-name').html();
            var $button_name = $form.children('.super-form-button').find('.super-button-name').text();
            if( typeof $button_html !== 'undefined' ) {
                var $button_html = $button_html.replace($button_name, "");
            }else{
                var $button_html = '';
            }
            if( typeof $form.children('.super-form-button')[0] !== 'undefined' ) {
                var $button_clone = $form.children('.super-form-button')[0].outerHTML;
                $($button_clone).appendTo($form.find('.super-multipart').not(':first'));
                $($button_clone).appendTo($form.find('.super-multipart'));
            }
            $form.children('.super-form-button').remove();
            $form.find('.super-multipart:not(:last-child)').find('.super-button-name').html($button_html+super_common_i18n.directions.next);
            $form.find('.super-multipart').not(':first').find('.super-button-name:eq(1)').html($button_html+super_common_i18n.directions.prev);
            $form.find('.super-multipart').not(':first').not(':last').find('.super-form-button:eq(0)').removeClass('super-form-button').addClass('super-next-multipart');
            $form.find('.super-multipart').not(':first').not(':last').find('.super-form-button').removeClass('super-form-button').addClass('super-prev-multipart');
            $form.find('.super-multipart:first').find('.super-form-button').removeClass('super-form-button').addClass('super-next-multipart');
            $form.find('.super-multipart:last').find('.super-form-button:eq(1)').removeClass('super-form-button').addClass('super-prev-multipart');
            $form.find('.super-multipart').each(function(){
                var $buttons_html = '';
                $(this).find('.super-button-align-center').each(function(){
                    $buttons_html += $(this)[0].outerHTML;
                });
                $(this).find('.super-button-align-center').remove();
                $( '<div class="super-buttons-wrapper">'+$buttons_html+'</div>' ).appendTo($(this));
            });
            $form.find('.super-multipart:not(:first)').each(function(){
                $(this).find('.super-button-align-center:first').insertAfter($(this).find('.super-button-align-center:last'));
            });
            var $progress_steps  = '<ul class="super-multipart-steps">';
            $.each($multiparts, function( index, value ) {
                if($total==1){
                    $progress_steps += '<li class="super-multipart-step active last-step">';
                }else{
                    if((index==0) && ($total != (index+1))){
                        $progress_steps += '<li class="super-multipart-step active">';
                    }else{
                        if($total == (index+1)){
                            $progress_steps += '<li class="super-multipart-step last-step">';
                        }else{
                            $progress_steps += '<li class="super-multipart-step">';
                        }
                    }
                }
                $progress_steps += '<span class="super-multipart-step-wrapper">';
                $progress_steps += '<span class="super-multipart-step-icon"><i class="fa fa-'+value.icon+'"></i></span>';
                $progress_steps += '<span class="super-multipart-step-count">'+(index+1)+'</span>';
                $progress_steps += '<span class="super-multipart-step-name">'+value.name+'</span>';
                $progress_steps += '<span class="super-multipart-step-description">'+value.description+'</span>';
                $progress_steps += '</span>';
                $progress_steps += '</li>';
            });
            $progress_steps += '</ul>';
            $form.prepend($progress_steps);

            var $progress = 100 / $total;
            var $progress_bar  = '<div class="super-multipart-progress">';
                $progress_bar += '<div class="super-multipart-progress-inner">';
                $progress_bar += '<div class="super-multipart-progress-bar" style="width:'+$progress+'%"></div>';
                $progress_bar += '</div>';
                $progress_bar += '</div>';
            $form.prepend($progress_bar);
        }
        */
    });
    
    SUPER.init_super_responsive_form_fields();


    //Init popups 
    SUPER.init_tooltips();
    
    //Init reCAPTCHA
    SUPER.reCaptcha();

    //Init datepicker
    SUPER.init_datepicker();

    //Init button colors
    SUPER.init_button_colors();

    //Init skype
    SUPER.init_skype();
    
    //Init dropdowns
    SUPER.init_dropdowns();

    //Init sliders
    SUPER.init_slider_field();


    $(window).resize(function() {
        SUPER.init_super_responsive_form_fields();
    });
    
    var $handle_columns_interval = setInterval(function(){
        if(($('.super-form').length != $('.super-form.active').length) || ($('.super-form').length==0)){
            SUPER.handle_columns();
        }else{
            clearInterval($handle_columns_interval);
        }
    }, 100);
    
}

// Init Slider fields
SUPER.init_slider_field = function(){
    var $ = jQuery;
    $('.super-slider').each(function () {
        var $this = $(this);
        if( $this.find('.slider').length==0 ) {
            var $field = $this.find('.super-shortcode-field');
            var $steps = $field.data('steps');
            var $min = $field.data('minnumber');
            var $max = $field.data('maxnumber');
            var $format = $field.data('format');
            var $value = $field.val();
            if( $value<$min ) {
                $value = $min;
            }
            $field.simpleSlider({
                snap: true,
                step: $steps,
                range: [$min, $max]
            });
            var $wrapper = $field.parents('.super-field-wrapper:eq(0)');
            var $slider = $wrapper.find('.slider');
            $wrapper.append('<span class="amount"><i>'+$value+''+$format+'</i></span>');
            $field.bind("slider:changed", function (event, data) {
                $slider_width = $slider.outerWidth(true);
                $amount_width = $wrapper.children('.amount').outerWidth(true);
                $wrapper.children('.amount').children('i').html(data.value+''+$format);
                if( ((data.position+$amount_width) + 5) < $slider_width ) {
                    $wrapper.children('.amount').css('left', data.position+'px');
                }
            });
        }
    });
    $('.slider-field').each(function () {
        var $this = $(this);
        if($this.children('.slider').length==0){
            var $field = $this.children('input');
            var $steps = $field.data('steps');
            var $min = $field.data('min');
            var $max = $field.data('max');
            $field.simpleSlider({
                snap: true,
                step: $steps,
                range: [$min, $max]
            });
            $field.show();
        }
    });
}

// Init Tooltips
SUPER.init_tooltips = function(){
    var $ = jQuery;
    if ( $.isFunction($.fn.tooltip) ) {
        $('.popup').tooltip('destroy');
        $('.popup').tooltip({
            html:true
        });
    }
}

// Init color pickers
SUPER.init_color_pickers = function(){
    var $ = jQuery;
    if ( $.isFunction($.fn.wpColorPicker) ) {
        $('.color-picker').each(function(){
            if($(this).find('.wp-picker-container').length==0){
                $(this).children('input').wpColorPicker({
                    palettes: ['#F26C68', '#444444', '#6E7177', '#FFFFFF', '#000000']
                });
            }
        });
    }
}

// Handle the responsiveness of the form
SUPER.init_super_responsive_form_fields = function(){
    var $ = jQuery;
    var $classes = [
        'super-first-responsiveness',
        'super-second-responsiveness',
        'super-third-responsiveness',
        'super-fourth-responsiveness',
        'super-last-responsiveness'
    ];

    $('.super-form').each(function(){

        var $this = $(this);
        var $width = $(this).outerWidth(true);

        //@media (min-width: 100px){
        if($width > 0 && $width < 530){
            SUPER.remove_super_form_classes($this,$classes);
            $this.addClass($classes[0]);
            return true;
        }

        //@media (min-width: 530px){  
        if($width >= 530 && $width < 760){
            SUPER.remove_super_form_classes($this,$classes);
            $('.super-form').addClass($classes[1]);
            return true;
        }

        //@media (min-width: 760px){
        if($width >= 760 && $width < 1200){
            SUPER.remove_super_form_classes($this,$classes);
            $this.addClass($classes[2]);
            return true;
        }

        //@media (min-width: 1200px){
        if($width >= 1200 && $width < 1400){
            SUPER.remove_super_form_classes($this,$classes);
            $this.addClass($classes[3]);
            return true;
        }

        //@media (min-width: 1400px){
        if($width >= 1400){
            SUPER.remove_super_form_classes($this,$classes);
            $this.addClass($classes[4]);
            return true;
        }
    });
}

// Update field visibility
SUPER.init_field_filter_visibility = function( $this ) {
    
    var $ = jQuery;
    if( typeof $this === 'undefined' ) {
        $('.field-container.filter, .field.filter, .super-field.filter').each(function(){
            SUPER.init_field_filter_visibility($(this));
        });
    }else{
        var $field_name = $this.find('.element-field').attr('name');
        var $field_value = $this.find('.element-field').val();
        $('.field[data-parent="'+$field_name+'"], .super-field[data-parent="'+$field_name+'"]').each(function(){
            var $this = $(this);
            var $filtervalue = $this.data('filtervalue');
            var str1 = $filtervalue;
            var str2 = $field_value;
            if(str2==''){
                $this.css('display','none');
            }else{
                if(str1.indexOf(str2) != -1){
                    $this.css('display','block').removeClass('hidden');
                }else{
                    $this.css('display','none').addClass('hidden');
                }
            }
        });
        $('.field-container[data-parent="'+$field_name+'"]').each(function(){
            var $this = $(this);
            var $filtervalue = $this.data('filtervalue');
            var str1 = $filtervalue;
            var str2 = $field_value;
            if(str2==''){
                $this.css('display','none');
            }else{
                if(str1.indexOf(str2) != -1){
                    $this.css('display','block').removeClass('hidden');
                }else{
                    $this.css('display','none').addClass('hidden');
                }
            }
        });
    }
}

jQuery(document).ready(function ($) {
    
    var $doc = $(document);
    
    SUPER.init_field_filter_visibility();
    $doc.on('change','.field-container.filter, .field.filter, .super-field.filter',function(){
        SUPER.init_field_filter_visibility($(this));
    });  
    
    function super_update_dropdown_value(e, $dropdown, $key){
        var $input = $dropdown.find('.super-field-wrapper').children('input');
        var $parent = $dropdown.find('.super-dropdown-ui');
        var $placeholder = $parent.find('.super-placeholder');
        var $selected = $parent.find('.selected');
        var $multiple = false;
        if($parent.hasClass('multiple')) $multiple = true;
        if($multiple==false){
            var $value = $selected.attr('data-value');
            var $name = $selected.html();
            $placeholder.html($name).attr('data-value',$value).addClass('selected');
            $parent.find('li').removeClass('selected');
            $selected.addClass('selected');
            $input.val($value);
        }else{
            var $max = $input.attr('data-maxlength');
            var $min = $input.attr('data-minlength');
            var $total = $parent.find('li.selected:not(.super-placeholder)').length;
            if($selected.hasClass('selected')){
                if($total>1){
                    if($total <= $min) return false;
                    $selected.removeClass('selected');    
                }
            }else{
                if($total >= $max) return false;
                $selected.addClass('selected');    
            }
            var $names = '';
            var $values = '';
            var $total = $parent.find('li.selected:not(.super-placeholder)').length;
            var $counter = 1;
            $parent.find('li.selected:not(.super-placeholder)').each(function(){
                if(($total == $counter) || ($total==1)){
                    $names += $(this).html();
                    $values += $(this).attr('data-value');
                }else{
                    $names += $(this).html()+', ';
                    $values += $(this).attr('data-value')+', ';
                }
                $counter++;
            });
            $placeholder.html($names);
            $input.val($values);
        }
        if($key=='enter') $dropdown.removeClass('super-focus-dropdown');
        SUPER.after_dropdown_change_hook();
        e.preventDefault();
    }
    $doc.keydown(function(e){
        var keyCode = e.keyCode || e.which; 
        if (keyCode == 13) {
            var $dropdown = $('.super-focus-dropdown');
            if($dropdown.length){
                super_update_dropdown_value(e, $dropdown, 'enter');
            }else{
                var $element = $('.super-focus');
                if( ($element.length) && (!$element.hasClass('super-textarea') ) ) {
                    if(!$element.parents('.super-form:eq(0)').find('.super-form-button.super-loading').length){
                        SUPER.before_validating_form_hook();
                        SUPER.validate_form($element.parents('.super-form:eq(0)'));
                        SUPER.after_validating_form_hook();
                    }
                    e.preventDefault();
                }
            }
        }
        if ( (keyCode == 40) || (keyCode == 38) ) {
            var $dropdown = $('.super-focus-dropdown');
            if($dropdown.length){
                var $placeholder = $dropdown.find('.super-dropdown-ui .super-placeholder');;
                if(!$dropdown.find('.super-dropdown-ui .selected').length){
                    var $item = $dropdown.find('.super-dropdown-ui li:eq(1)');
                    if(keyCode == 38){
                        var $item = $dropdown.find('.super-dropdown-ui li:last-child');
                    }
                    $item.addClass('selected');
                    $placeholder.attr('data-value', $item.data('value')).html($item.html());
                }else{
                    var $current = $dropdown.find('.super-dropdown-ui li.selected');
                    if(keyCode == 38){
                        var $next_index = $current.index() - 1;
                        if($next_index==0){
                            $next_index = $dropdown.find('.super-dropdown-ui li:last-child').index();
                        }
                    }else{
                        var $next_index = $current.index() + 1;
                    }
                    var $item = $dropdown.find('.super-dropdown-ui li:eq('+$next_index+')');
                    if($item.length==0){
                        var $item = $dropdown.find('.super-dropdown-ui li:eq(1)');
                    }
                    $dropdown.find('.super-dropdown-ui li.selected').removeClass('selected');
                    $placeholder.attr('data-value', $item.data('value')).html($item.html());
                    $item.addClass('selected');
                }
                var $dropdown_ui = $dropdown.find('.super-dropdown-ui');
                $dropdown_ui.scrollTop($dropdown_ui.scrollTop() - $dropdown_ui.offset().top + $item.offset().top - 50); 
                super_update_dropdown_value(e, $dropdown);
            }
        }
        if (keyCode == 9) {
            var $field = $('.super-field.super-focus')
            if( $field.length ) {
                var $form = $field.parents('.super-form:eq(0)');
                var $total = $form.find('.super-field').length;
                var $counter = 1;
                $form.find('.super-field').each(function(){
                    if($(this).hasClass('super-focus')){
                        return false;
                    }
                    var $hidden = false;
                    $(this).parents('.super-shortcode.super-column').each(function(){
                        if($(this).css('display')=='none'){
                            $hidden = true;
                        }
                    });
                    var $parent = $(this).parents('.super-shortcode:eq(0)');
                    if( ( $hidden==true )  || ( ( $parent.css('display')=='none' ) && ( !$parent.hasClass('super-hidden') ) ) ) {
                        // Exclude conditionally
                        return true;
                    }
                    $counter++;
                });
                var $new_counter = 1;
                $form.find('.super-field').each(function(){
                    var $hidden = false;
                    $(this).parents('.super-shortcode.super-column').each(function(){
                        if($(this).css('display')=='none'){
                            $hidden = true;
                        }
                    });
                    var $parent = $(this).parents('.super-shortcode:eq(0)');
                    if( ( $hidden==true )  || ( ( $parent.css('display')=='none' ) && ( !$parent.hasClass('super-hidden') ) ) ) {
                        // Exclude conditionally
                        return true;
                    }else{
                        var $next = $(this);
                        var $children = $next.find('.super-shortcode-field');
                        if( ( ( ( $next.parents('.super-multipart:eq(0)').length ) && ( ( $total==( $counter+1 ) ) || ( $total==( $counter+2 ) ) ) ) && ( $next.hasClass('super-button') ) ) || ( ( ( !$next.parents('.super-multipart:eq(0)').length ) && ( $total==($counter+1) ) ) && ( $next.hasClass('super-button') ) ) ) {
                            $('.super-focus *').blur();
                            $('.super-focus').removeClass('super-focus');
                            $('.super-focus-dropdown').removeClass('super-focus-dropdown');
                            $form.find('.super-form-button').addClass('super-focus');
                            SUPER.init_button_hover_colors( $form.find('.super-form-button') );
                            e.preventDefault();
                            return false;
                        }else{
                            if($new_counter==($counter+1)){
                                var $next = $(this);
                                var $children = $next.find('.super-shortcode-field');
                                if($children.length){
                                    var $duration = parseFloat(super_common_i18n.duration);
                                    $('.super-focus').each(function(){
                                        var $field = $(this).find('.super-shortcode-field');
                                        SUPER.handle_validations($field, $field.data('validation'), $duration);
                                    });
                                    $('.super-focus *').blur();
                                    $('.super-focus').removeClass('super-focus');
                                    $('.super-focus-dropdown').removeClass('super-focus-dropdown');
                                    if( ($next.hasClass('super-dropdown')) || ($next.hasClass('super-countries')) ) {
                                        $next.addClass('super-focus').addClass('super-focus-dropdown');
                                    }else{
                                        if( ($next.hasClass('super-checkbox')) || ($next.hasClass('super-radio')) ) {
                                            $next.addClass('super-focus');
                                        }else{
                                            $children.focus();
                                        }
                                    }
                                    e.preventDefault();
                                }else{
                                    $form.find('.super-multipart.active').find('.super-next-multipart').click();
                                    e.preventDefault();
                                    return true;
                                }
                            }
                        }
                    }
                    $new_counter++;
                });
            }
        }
    });

    $doc.on('keyup', '.super-icon-search input', function(){
        var $value = $(this).val();
        var $icons = $(this).parents('.super-icon-field').children('.super-icon-list').children('i');
        if($value==''){
            $icons.css('display','inline-block');   
        }else{
            $icons.each(function(){
                if($(this).is('[class*="'+$value+'"]')) {
                    $(this).css('display','inline-block');
                }else{
                    $(this).css('display','none');
                }
            });
        }
    });

    $doc.on('click','.super-icon-list i',function(){
        if($(this).hasClass('active')){
            $(this).parent().find('i').removeClass('active');
            $(this).parents('.super-icon-field').find('input').val('');
        }else{
            $(this).parent().find('i').removeClass('active');
            $(this).parents('.super-icon-field').find('input').val($(this).attr('class').replace('fa fa-',''));
            $(this).addClass('active');
        }
    });

    SUPER.init_slider_field();
    SUPER.init_tooltips(); 
    SUPER.init_color_pickers();
    
});