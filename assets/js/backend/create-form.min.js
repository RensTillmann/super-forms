var $ = jQuery;
var $doc = $(document);

// Loading States
SUPER.loading_states = function(button, status){
    status = status || 'loading';
    if(status=='loading'){
        var old_html = button.html();
        button.data('old-html',old_html);
        button.addClass('super-loading').html('<i class="fa fa-refresh fa-spin"></i>');
    }else{
        button.removeClass('super-loading').html(button.data('old-html'));
    }
}

// Regenerate Element Final Output (inner)
SUPER.regenerate_element_inner = function($target){
    if($target==2){
        var $elements = $('textarea[name="_super_elements"]').val();
    }else{
        var $elements = [];
        $target.children('.super-element').each(function(){
            var $this = $(this);
            var $tag = $this.data('shortcode-tag');
            var $group = $this.data('group');
            var $data = $.parseJSON($this.children('textarea[name="element-data"]').val());
            if($tag=='column'){
                var $size = $this.attr('data-size');
                $data.size = $size;
            }
            $elements.push({ 
                tag: $tag,
                group:$group,
                inner:SUPER.regenerate_element_inner_children($this),
                data:$data
            });
        });
       var $elements = JSON.stringify($elements);
    }
    $('textarea[name="_super_elements"]').val($elements);
    if($target==2){
        SUPER.save_form($('.super-actions .save'), 2);
    }
}

// Also collect all inner items
SUPER.regenerate_element_inner_children = function($target){
    var $target = $target.children('.super-element-inner');
    if($target.children('.super-element').length){
        var $elements = [];
        $target.children('.super-element').each(function(){
            var $this = $(this);
            var $tag = $this.data('shortcode-tag');
            var $group = $this.data('group');
            var $data = $.parseJSON($this.children('textarea[name="element-data"]').val());
            if($tag=='column'){
                var $size = $this.attr('data-size');
                $data.size = $size;
            }
            $elements.push({ 
                tag: $tag,
                group:$group,
                inner:SUPER.regenerate_element_inner_children($this),
                data:$data
            });
        });
        return $elements;
    }else{
        return '';
    }
}

// Re initialize drop here placeholder (image)
SUPER.init_drop_here_placeholder = function(){
    $('.super-preview-elements').addClass('drop-here-placeholder');
    SUPER.init_drag_and_drop();
}

// Initialize elements so they can be sortable
SUPER.init_drag_and_drop = function(){
    $('.super-preview-elements').sortable({
        opacity: 0.8,
        forcePlaceholderSize: true,
        connectWith: ".super-preview-elements > .super-element, .super-preview-elements > .super-element .super-element-inner",
        stop: function( event, ui ) {
            var $tag = ui.item.data('shortcode-tag');
            var $parent_tag = ui.item.parents('.super-element:eq(0)').data('shortcode-tag');
            if( typeof $parent_tag !== 'undefined' ) {
                if( ( $tag==='multipart_pre' ) && ( $tag == $parent_tag ) ) {
                    alert('It\'s not possible to insert a Multipart inside a Multipart');
                    return false;
                }
            }
            SUPER.init_drop_here_placeholder();
            SUPER.regenerate_element_inner($('.super-preview-elements'), '', 1);
        }
    }).disableSelection();    
    var $target = $('.super-preview-elements .super-element.column > .super-element-inner, .super-preview-elements .super-element.multipart > .super-element-inner');
    $target.sortable({
        opacity: 0.8,
        forcePlaceholderSize: true,
        connectWith: ".super-preview-elements, .super-preview-elements > .super-element .super-element-inner",
        stop: function( event, ui ) {
            var $tag = ui.item.data('shortcode-tag');
            var $parent_tag = ui.item.parents('.super-element:eq(0)').data('shortcode-tag');
            if( typeof $parent_tag !== 'undefined' ) {
                if( ( $tag==='multipart_pre' ) && ( $tag == $parent_tag ) ) {
                    alert('It\'s not possible to insert a Multipart inside a Multipart');
                    return false;
                }
            }
            SUPER.init_drop_here_placeholder();
            SUPER.regenerate_element_inner($('.super-preview-elements'), '', 1);
        }
    }).disableSelection();
}

// Scroll function when dropable or sortable element is activated
SUPER.handleNear = function(){
    var $scrolled = $(window).scrollTop();
    var $buffer = 20;
    var $docHeight = $(document).outerHeight(true);
    var $windowHeight = $(window).outerHeight(true);
    var $near_top = $scrolled - this.ev.y >= $buffer;  
    var $near_bottom = $scrolled + $windowHeight - this.ev.y <= $buffer;  
    if($near_top){
        window.scrollTo(0, $scrolled - $buffer);
    }
    if(($near_bottom) && ((this.ev.y+$buffer) < $docHeight)){
        window.scrollTo(0, this.ev.y + $buffer - $windowHeight);
    }        
}

SUPER.init_previously_created_fields = function(){
    $('.super-multi-items select[name="conditional_field"]').each(function(){
        var $this = $(this);
        var $value = $this.data('value');
        $('.super-preview-elements .super-element').each(function(){
            var $data = $(this).find('textarea[name="element-data"]').val();
            var $data = JSON.parse($data);
            var $name = $data.name;
            var $email = $data.email;
            var $found = $this.find('option[value="'+$name+'"]').length;
            if( ( typeof $name !== 'undefined' ) && ( $found==0 ) ) {
                if($value==$name){
                    $this.append('<option selected="selected" value="'+$name+'">'+$email+' ('+$name+')</option>');  
                }else{
                    $this.append('<option value="'+$name+'">'+$email+' ('+$name+')</option>');  
                }
            }
        });
    });
}

SUPER.update_multi_items = function($this){
    var $parent = $this.parents('.field-input:eq(0)');
    var $items = [];
    $parent.find('.super-multi-items').each(function(){
        var $this = $(this);
        if($this.hasClass('super-conditional-item')){
            $items.push({ 
                field: $this.children('select[name="conditional_field"]').val(),
                logic: $this.children('select[name="conditional_logic"]').val(),
                value: $this.children('input[name="conditional_value"]').val()
            });
        }else{
            $items.push({ 
                checked: $this.children('input[type="radio"]').is(':checked'),
                label: $this.children('input[name="label"]').val(),
                value: $this.children('input[name="value"]').val()
            });
        }
    });
    var $items = JSON.stringify($items);
    $parent.children('textarea').val($items);
}

SUPER.init_dragable_elements = function() {
    $('.draggable-element').pep({
        activeClass: 'active',
        droppableActiveClass: 'dropping-allowed',
        droppable: '.super-dropable',
        start: function(ev, obj){
            SUPER.init_drop_here_placeholder();
            obj.noCenter = true;
            var top = obj.$el.css('top').replace('px','');
            var left = obj.$el.css('left').replace('px','');
            if(typeof obj.$el.attr('data-start-position-top') === 'undefined'){
                obj.$el.attr('data-start-position-top', top)
                obj.$el.attr('data-start-position-left', left)
            }            
        },
        drag:function(e) {  
            SUPER.handleNear.apply(this);
        },
        stop: function(ev, obj){
            if(this.activeDropRegions.length>0){
                var $tag = obj.$el.data('shortcode');
                var $target = $('.dropping-allowed:not(:has(.dropping-allowed))');
                var $multipart_found = $target.closest('[data-shortcode-tag="multipart"]').length;
                if( ( ($multipart_found>0) && ($tag==='multipart_pre') ) ) {
                    alert('It\'s not possible to insert a Multipart inside a Multipart');
                    return false;
                }
                var $predefined = '';
                if( typeof obj.$el.find('.predefined').val() !== 'undefined' ) {
                    $predefined = JSON.parse(obj.$el.find('.predefined').val());
                }
                $.ajax({
                    type: 'post',
                    url: ajaxurl,
                    data: {
                        action: 'super_get_element_builder_html',
                        tag: obj.$el.data('shortcode'),
                        group: obj.$el.data('group'),
                        predefined: $predefined
                    },
                    success: function (data) {
                        $(data).appendTo($target);
                        SUPER.regenerate_element_inner($('.super-preview-elements'), '', 1);
                        SUPER.init_skype();
                        SUPER.init_datepicker();
                        SUPER.init_drop_here_placeholder();
                    }
                });
            }else{
                obj.cssX = 0
                obj.cssY = 0
                obj.translation = "matrix(1, 0, 0, 1, 0, 0)"
                obj.transform(obj.translation)
                obj.$el.css('top', '0').css('left', '0');
            }
        },
        revert: true,
        cssEaseDuration: 0,
        
    });
}
SUPER.save_form = function( $this, $preview ) {
    var $fields = $('.super-preview-elements .super-shortcode-field, .super-preview-elements .super-selected-files');
    var $error = false;
    $fields.each(function(){
        var $origin_field = $(this);
        if($origin_field.parents('.super-file:eq(0)').length) {
            var $duplicate_fields = $('.super-preview-elements .super-selected-files[name="'+$(this).attr('name')+'"]');
        }else{
            var $duplicate_fields = $('.super-preview-elements .super-shortcode-field[name="'+$(this).attr('name')+'"]');
        }
        if($duplicate_fields.length > 1){
            $duplicate_fields.parents('.super-element').addClass('error');
            $error = true;
        }else{
            $duplicate_fields.parents('.super-element').removeClass('error');
        }
    });
    if($error == true) {
        alert('You have duplicate field names. Please make sure each field has a unique name!');
        return false;
    }        
    
    $this.html('<i class="fa fa-save"></i>Saving...');
    var $settings = [];
    $('.super-create-form .super-form-settings .element-field').each(function(){
        $settings.push({'name':$(this).attr('name'), 'value':$(this).val()});
    });
    $.ajax({
        type: 'post',
        url: ajaxurl,
        data: {
            action: 'super_save_form',
            id: $('.super-create-form input[name="form_id"]').val(),
            title: $('.super-create-form input[name="title"]').val(),
            shortcode: $('textarea[name="_super_elements"]').val(),
            settings: $settings,
        },
        success: function (data) {
            $('.super-create-form .super-get-form-shortcodes').val('[super_form id="'+data+'"]');
            $('.super-create-form input[name="form_id"]').val(data);
            $('.super-create-form .super-actions .save').html('<i class="fa fa-save"></i>Save');
            if($preview==1){
                var $this = $('.super-create-form .super-actions .preview:eq(3)');
                SUPER.preview_form($this);
            }else{
                var href = window.location.href;
                var page = href.substr(href.lastIndexOf('/') + 1);
                var str2 = "admin.php?page=super_create_form&id";
                if(page.indexOf(str2) == -1){
                    window.location.href = "admin.php?page=super_create_form&id="+data;
                }else{
                    if($preview==2){
                        location.reload();
                    }                    
                }
            }
        }
    });
}
SUPER.preview_form = function( $this ) {  
    if($('input[name="form_id"]').val()==''){
        alert('Before you can preview it, you need to save your form!');
        return false;
    }
    if(!$this.hasClass('active')){
        $this.html('Loading...');
        $('.super-live-preview').html('');
        $('.super-preview-elements').css('display','none');
        $('.super-live-preview').addClass('loading').css('display','block');
        $.ajax({
            type: 'post',
            url: ajaxurl,
            data: {
                action: 'super_load_preview',
                id: $('.super-create-form input[name="form_id"]').val(),
            },
            success: function (data) {
                $('.super-live-preview').removeClass('loading');
                $('.super-live-preview').html(data);
                $this.html('Builder');
            },
            complete: function () {
                SUPER.handle_columns();
                SUPER.init_button_colors();
                //SUPER.init_button_colors();
                SUPER.init_super_responsive_form_fields();
                SUPER.init_super_form_frontend();
            }
        });
    }else{
        $('.super-live-preview').css('display','none');
        $('.super-preview-elements').css('display','block');
        $this.html('Preview');
    }
    $this.toggleClass('active');
}

// Update export json
SUPER.init_update_export_json = function( $this ) {
    var $settings = {};
    $('.super-create-form .super-form-settings .element-field').each(function(){
        $settings[$(this).attr('name')] = $(this).val();
    });
    var $settings = JSON.stringify($settings);
    $('.super-export-import textarea[name="export-json"]').val($settings); 
}

jQuery(document).ready(function ($) {
    
    var $doc = $(document);
    
    SUPER.init_drop_here_placeholder();
    SUPER.init_dragable_elements();
    SUPER.init_image_browser();

    $('.super-layout-elements .super-elements-container').css('display','block');

    $doc.on('change keydown keyup blur','.super-create-form .super-form-settings .element-field',function(){
        SUPER.init_update_export_json($(this));
    });

    $doc.on('click','.super-element-actions .duplicate',function(){
        var $parent = $(this).parents('.super-element:eq(0)');
        $parent.find('.tooltip').remove();
        var $new = $parent.clone();
        $new.removeClass('editing');
        $new.insertAfter($parent);
        $new.slideUp(0);
        $new.slideDown(300);
        SUPER.regenerate_element_inner($('.super-preview-elements'), '', 1);
    });
    $doc.on('click', '.super-element-actions .delete', function(){
        $(this).parents('.super-element:eq(0)').remove();
        SUPER.regenerate_element_inner($('.super-preview-elements'), '', 1);
        cancel_update();
    });
    $doc.on('click','.super-element > .super-element-header > .resize > span',function(){
        var $parent = $(this).parents('.super-element:eq(0)');
        var $data = $parent.find('textarea[name="element-data"]').val();
        var $data = JSON.parse($data);
        var $size = $data.size;
        if( typeof $parent.attr('data-size') !== 'undefined' ){
            var $size = $parent.attr('data-size');
        }
        var $sizes = {
            '1/1':'super_one_full',
            '4/5':'super_four_fifth',
            '3/4':'super_three_fourth',
            '2/3':'super_two_third',
            '3/5':'super_three_fifth',
            '1/2':'super_one_half',
            '2/5':'super_two_fifth',
            '1/3':'super_one_third',
            '1/4':'super_one_fourth',
            '1/5':'super_one_fifth'};
        var $keys = ['1/1','4/5','3/4','2/3','3/5','1/2','2/5','1/3','1/4','1/5'];
        var $start = $size;
        var $next = $keys[($.inArray($start, $keys) + 1) % $keys.length];
        var $prev = $keys[($.inArray($start, $keys) - 1 + $keys.length) % $keys.length];
        if($(this).hasClass('smaller')){
            if($size=='1/5'){
                return false;
            }
            $parent.attr('data-size',$next);
            $parent.removeClass($sizes[$start]).addClass($sizes[$next]);
            $parent.children('.super-element-header').find('.resize > .current').html($next);
        }
        if($(this).hasClass('bigger')){
            if($size=='1/1'){
                return false;
            }
            $parent.attr('data-size',$prev);
            $parent.removeClass($sizes[$start]).addClass($sizes[$prev]);
            $parent.children('.super-element-header').find('.resize > .current').html($prev);
        }
        SUPER.regenerate_element_inner($('.super-preview-elements'), '', 1);
    });
    
    $doc.on('click', '.super-action-bar .save', function(){
        SUPER.loading_states($(this));
        var $button = $(this);
        var $editing = $('.super-posts-list > ul > li.editing');
        var $elements = $('textarea[name="raw_shortcode"]').val();
        var $data = [{
            name: $('.super-action-bar input[name="name"]').val(), 
            slug: $editing.children('.name').data('slug'),
            post_type: $('.super-add-new input[name="post-type"]').val(),
        }];
        if($data[0].name==''){
            alert('Please enter the name for your template');
            $('.super-action-bar input[name="name"]').focus();
            SUPER.loading_states($button, 'complete');
            return false;
        }
        
        if($editing.length == 1){
            $.ajax({
                type: 'post',
                url: ajaxurl,
                data: {
                    action: 'super_update_template',
                    id: $editing.data('id'),
                    data: $data[0],
                    elements: $elements,
                },
                success: function (data) {
                    var data = $.parseJSON(data);
                    $editing.children('.name').text(data.name);
                    SUPER.loading_states($button, 'complete');
                }
            });
        }else{
            $.ajax({
                type: 'post',
                url: ajaxurl,
                data: {
                    action: 'super_create_template',
                    data: $data[0],
                    elements: $elements,
                },
                success: function (data) {
                    var data = $.parseJSON(data);
                    if(data.errors){
                        alert(data.errors);    
                        SUPER.loading_states($button, 'complete');
                    }else{
                        SUPER.loading_states($button, 'complete');
                    }
                }
            });
        }
    });
    $doc.on('click','.super-switch-forms',function(){
        var $this = $(this);
        if($this.hasClass('active')){
            $this.children('.fa').removeClass('fa-chevron-up').addClass('fa-chevron-down');
            $this.removeClass('active');
            $this.children('ul').slideUp(300);
        }else{
            $this.children('.fa').removeClass('fa-chevron-down').addClass('fa-chevron-up');
            $this.addClass('active');
            $this.children('ul').slideDown(300);
        }
    });
    $doc.on('mouseleave','.super-switch-forms ul',function(){
        var $this = $(this).parent();
        $this.children('.fa').removeClass('fa-chevron-up').addClass('fa-chevron-down');
        $this.removeClass('active');
        $this.children('ul').slideUp(300);
    });

    $doc.on('change','.super-form-settings-tabs > select, .super-element-settings-tabs > select',function(){
        $(this).parents('.super-elements-container:eq(0)').children('.tab-content').removeClass('active');
        $(this).parents('.super-elements-container:eq(0)').children('.tab-content:eq('+($(this).val())+')').addClass('active');
    });
    
    $doc.on('click','.super-multi-items .add',function(){
        var $this = $(this);
        var $parent = $this.parents('.field-input:eq(0)');
        var $item = $parent.children('.super-multi-items:eq(0)').clone();
        $parent.children('.super-multi-items:eq(0)').clone().insertAfter($parent.find('.super-multi-items').last());
        $parent.find('.super-multi-items').last().find('input[type="radio"]').prop('checked', false);
        if($parent.find('.super-multi-items').length > 1){
            $parent.find('.delete').css('visibility','');
        }else{
            $parent.find('.delete').css('visibility','hidden');
        }
    });    

    $doc.on('click','.super-multi-items .delete',function(){
        var $this = $(this);
        var $parent = $this.parents('.field-input:eq(0)');
        if($parent.find('.super-multi-items').length <= 2){
            $parent.find('.delete').css('visibility','hidden');
        }else{
            $parent.find('.delete').css('visibility','');
        }
        $(this).parent().remove();
    }); 
    
    $doc.on('click','.super-element-settings .update-element',function(){
        var $button = $(this);
        $button.addClass('loading');
        $(this).parents('.super-elements-container:eq(0)').find('.super-multi-items').each(function(){
            SUPER.update_multi_items($(this));
        });
        var $fields = {};
        $('.super-element-settings .element-field').each(function(){
            var $this = $(this);
            var $name = $this.attr('name');
            var $value = $this.val();
            if($this.parents('.field-input:eq(0)').find('.super-multi-items').length){
                $fields[$name] = $.parseJSON($value);   
            }else{
                $fields[$name] = $value;
            }
        });
        var $value = JSON.stringify($fields);
        
        var $element = $('.super-element.editing');
        $element.children('textarea[name="element-data"]').val($value);

        var $tag = $element.data('shortcode-tag');
        var $group = $element.data('group');

        $.ajax({
            type: 'post',
            url: ajaxurl,
            data: {
                action: 'super_get_element_builder_html',
                tag: $tag,
                group: $group,
                builder: 0,
                data: $fields
            },
            success: function (data) {
                if( $element.children('.super-element-inner').hasClass('super-dropable') ) {
                    $shortcode = $element.children('.super-element-inner').children('.super-shortcode')
                    $(data).insertAfter($shortcode);
                    $shortcode.remove();
                }else{
                    $element.children('.super-element-inner').html(data);
                }
            },
            complete: function() {
                if($tag=='column'){
                    var $sizes = {
                        '1/1':'super_one_full',
                        '4/5':'super_four_fifth',
                        '3/4':'super_three_fourth',
                        '2/3':'super_two_third',
                        '3/5':'super_three_fifth',
                        '1/2':'super_one_half',
                        '2/5':'super_two_fifth',
                        '1/3':'super_one_third',
                        '1/4':'super_one_fourth',
                        '1/5':'super_one_fifth'
                    };
                    $element.attr('class', 'super-element drop-here '+$sizes[$fields['size']]+' editing');
                    $element.data('size', $fields['size']).find('.super-element-header .resize .current').html($fields['size']);
                }
                SUPER.regenerate_element_inner($('.super-preview-elements'), '', 1);        
                SUPER.init_skype();
                SUPER.init_datepicker();
                $button.removeClass('loading');
            }
        });
        //$('.super-element.editing .super-element-inner .super-shortcode');
    });
    
    function cancel_update(){
        $('.super-preview-elements .super-element').removeClass('editing');
        $('.super-element.super-element-settings .super-elements-container').html('<p>'+super_create_form_i18n.not_editing_an_element+'</p>');
    }

    $doc.on('click','.super-element-settings .cancel-update',function(){
        cancel_update();
    });
    
    $doc.on('change click blur keyup keydown focus', '.super-multi-items *',function(){
        SUPER.update_multi_items($(this));
    });
    
    $doc.on('click','.super-multi-items.super-dropdown-item .sorting span.up i',function(){
        var $parent = $(this).parents('.field-input:eq(0)');
        var $count = $parent.find('.super-multi-items').length;
        if($count>1){
            var $this = $(this).parents('.super-multi-items:eq(0)');
            var $prev = $this.prev();
            var $index = $this.index();
            if($index>0){
                $this.insertBefore($prev);
            }else{
                $this.insertAfter($parent.find('.super-multi-items').last());
            }
        }
    });
    $doc.on('click','.super-multi-items.super-dropdown-item .sorting span.down i',function(){
        var $parent = $(this).parents('.field-input:eq(0)');
        var $count = $parent.find('.super-multi-items').length;
        if($count>1){
            var $this = $(this).parents('.super-multi-items:eq(0)');
            var $next = $this.next();
            var $index = $this.index();
            if($index+1 == $count){
                $this.insertBefore($parent.find('.super-multi-items').first());
            }else{
                $this.insertAfter($next);
            }
        }
    });

    $doc.on('click','.super-multi-items.super-dropdown-item input[type="radio"]',function(){
        var $prev = $(this).attr('data-prev');
        $(this).parents('.field-input:eq(0)').find('input[type="radio"]').prop('checked',false).attr('data-prev','false');
        if($prev=='true'){
            $(this).prop('checked', false).attr('data-prev','false');
        }else{
            $(this).prop('checked', true).attr('data-prev','true');
        }
    });

    $doc.on('click','.super-elements .super-element h3',function(){
        $(this).parent().children('.super-elements-container').slideToggle();
        $(this).parent().siblings().children().next('.super-elements-container').slideUp();
        return false;
    });
    
    $doc.on('click','.super-create-form .super-actions .clear',function(){
        var $clear = confirm("Please confirm to clear form!");
        if($clear == true) {
            $('.super-debug textarea[name="_super_elements"]').val('');
            $('.super-preview-elements').html('');
            $('.super-element.super-element-settings .super-elements-container').html('<p>'+super_create_form_i18n.not_editing_an_element+'</p>');
        }
    });

    $doc.on('click','.super-create-form .super-actions .delete',function(){
        var $delete = confirm("Please confirm deletion!");
        if($delete == true) {
            var $this = $(this);
            $this.html('<i class="fa fa-trash-o"></i>Deleting...');
            $.ajax({
                type: 'post',
                url: ajaxurl,
                data: {
                    action: 'super_delete_form',
                    id: $('.super-create-form input[name="form_id"]').val(),
                },
                success: function (data) {
                    $this.html('<i class="fa fa-check"></i>Deleted!');
                    window.location.href = "edit.php?post_type=super_form";
                }
            }); 
        }
    });

    $doc.on('click','.super-load-form .load-form',function(){
        var $parent = $(this).parent();
        var $value = $('select[name="super-forms"]').val();
        if($value==''){
            alert('You did not select a form!');
        }else{
            if(($value%1)===0) {
                $.ajax({
                    type: 'post',
                    url: ajaxurl,
                    data: {
                        action: 'super_load_form',
                        id: $('select[name="super-forms"]').val(),
                    },
                    success: function (data) {
                        $('textarea[name="_super_elements"]').val(data);
                        SUPER.regenerate_element_inner(2);
                    }
                });
            }else{
                $html = $parent.find('textarea[name="'+$value+'"]').val();
                $('.super-debug textarea[name="_super_elements"]').html($html);
                SUPER.regenerate_element_inner(2);
            }
        }
        return false;
    });    
    
    $doc.on('click','.super-element-actions .edit',function(){
        var $parent = $(this).parents('.super-element:eq(0)');
        if($parent.hasClass('editing')){
            return false;
        }
        var $data = $parent.children('textarea[name="element-data"]').val();
        var $tag = $parent.data('shortcode-tag');
        var $group = $parent.data('group');
        var $data = JSON.parse($data);
        var $target = $('.super-element-settings > .super-elements-container');
        $target.html('');
        $('.super-preview-elements .super-element').removeClass('editing');
        $parent.addClass('editing');
        $('.super-element .super-elements-container').slideUp();
        $('.super-element.super-element-settings').siblings().children().next('.super-elements-container').slideUp();
        $.ajax({
            type: 'post',
            url: ajaxurl,
            data: {
                action: 'super_load_element_settings',
                tag: $tag,
                group: $group,
                data: $data,
            },
            success: function (data) {
                $target.html(data);
            },
            complete: function () {
                SUPER.init_previously_created_fields();
                SUPER.init_slider_field();
                SUPER.init_tooltips();
                SUPER.init_image_browser();
                SUPER.init_color_pickers();
                SUPER.init_field_filter_visibility();
                $('.super-element .super-elements-container').slideUp();
                $('.super-element.super-element-settings .super-elements-container').slideDown();
            }
        });
        return false;
    });
    
    $doc.on('click','.super-create-form .super-actions .save',function(){
        var $this = $(this);
        SUPER.save_form($this);
    });

    $doc.on('click','.super-create-form .super-actions .preview',function(){
        var $this = $('.super-create-form .super-actions .preview:eq(3)');
        if($(this).hasClass('mobile')){
            $('.super-live-preview').removeClass('tablet');
            $('.super-create-form .super-actions .preview.tablet').removeClass('active');
            $('.super-create-form .super-actions .preview.desktop').removeClass('active');    
            $(this).addClass('active');
            $('.super-live-preview').addClass('mobile');
            if(!$this.hasClass('active')){
                $this.html('Loading...');
                SUPER.save_form($('.super-actions .save'), 1);
            }
            SUPER.init_super_responsive_form_fields();
            return false;
        }
        if($(this).hasClass('tablet')){
            $('.super-live-preview').removeClass('mobile');
            $('.super-create-form .super-actions .preview.mobile').removeClass('active');
            $('.super-create-form .super-actions .preview.desktop').removeClass('active');
            $(this).addClass('active');
            $('.super-live-preview').addClass('tablet');
            if(!$this.hasClass('active')){
                $this.html('Loading...');
                SUPER.save_form($('.super-actions .save'), 1);
            }
            SUPER.init_super_responsive_form_fields();
            return false;
        }
        if($(this).hasClass('desktop')){
            $('.super-live-preview').removeClass('tablet');
            $('.super-live-preview').removeClass('mobile');
            $('.super-create-form .super-actions .preview.mobile').removeClass('active');
            $('.super-create-form .super-actions .preview.tablet').removeClass('active');
            $(this).addClass('active');
            if(!$this.hasClass('active')){
                $this.html('Loading...');
                SUPER.save_form($('.super-actions .save'), 1);
            }
            SUPER.init_super_responsive_form_fields();
            return false;
        } 
        if(!$this.hasClass('active')){
            $this.html('Loading...');
            SUPER.save_form($('.super-actions .save'), 1);
        }else{
            $('.super-live-preview').css('display','none');
            $('.super-preview-elements').css('display','block');
            $this.html('Preview').removeClass('active');
        }
    });

    // @since   1.0.6
    $doc.on('focus','.super-get-form-shortcodes, .super-export-import textarea[name="export-json"]',function(){
        var $this = $(this);
        $this.select();

        // Work around Chrome's little problem
        $this.mouseup(function() {
            // Prevent further mouseup intervention
            $this.unbind("mouseup");
            return false;
        });
    });
    $doc.on('click','.super-export-import .import-settings, .super-export-import .load-default-settings',function(){
        var $method = 'import';
        var $button = $(this);
        var $settings = $('.super-export-import textarea[name="import-json"]').val();
        $button.addClass('loading');
        if($button.hasClass('load-default-settings')){
            $method = 'load-default';
        }
        $.ajax({
            type: 'post',
            url: ajaxurl,
            data: {
                action: 'super_import_settings',
                title: $('.super-create-form input[name="title"]').val(),
                shortcode: $('.super-create-form textarea[name="_super_elements"]').val(),
                id: $('.super-create-form input[name="form_id"]').val(),
                settings: $settings,
                method: $method
            },
            success: function(data){
                var href = window.location.href;
                var page = href.substr(href.lastIndexOf('/') + 1);
                var str2 = "admin.php?page=super_create_form&id";
                if(page.indexOf(str2) == -1){
                    window.location.href = "admin.php?page=super_create_form&id="+data;
                }else{
                    location.reload();
                }
            },
            complete: function(){
                $button.removeClass('loading');
            }
        });
    });

    // @since   1.0.6
    var $window = $(window).outerHeight(true);
    var $header = $('.super-header').outerHeight(true);
    var $viewport = $window-$header;    
    var $offset = $('.super-create-form .super-elements').offset().top;
    var timer;
    $(window).on('load scroll resize', function() {
        init_form_settings_container_heights();
        var $window_width = $(window).outerWidth(true);
        if($window_width >= 1263){
            if(timer) clearTimeout(timer);
            timer = setTimeout(function(){
                var $scroll = $(window).scrollTop(); 
                if($scroll >= $offset-40){
                    $('.super-create-form .super-elements').animate({
                        top: ($scroll+40-$offset),
                    }, 400);
                }else{
                    $('.super-create-form .super-elements').animate({
                        top: 0,
                    }, 400);
                }
            }, 300);
        }else{
            if(timer) clearTimeout(timer);
            $('.super-create-form .super-elements').animate({
                top: 0,
            }, 400);
        }
    });
    function init_form_settings_container_heights(){
        var $window_height = $(window).outerHeight(true);
        var $wp_admin_bar = $('#wpadminbar').outerHeight(true)+15;
        var $tabs_height = 0;
        var $container_padding = 50;
        var $settings_tab = 60;
        $('.super-create-form .super-elements > .super-element h3').each(function(){
            $tabs_height = $(this).outerHeight(true) + $tabs_height;  
        });
        var $max_height = $window_height - $tabs_height - $wp_admin_bar;
        $('.super-form-settings > .super-elements-container > .tab-content').css('max-height',$max_height-$settings_tab-$container_padding);
        $('.super-form-elements > .super-elements-container').css('max-height',$max_height); 
        $('.super-shortcode-fields .tabs_content').css('max-height',($window_height/2));        
    }
});